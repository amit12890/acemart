{"version":3,"sources":["webpack:///./node_modules/@magento/peregrine/lib/talons/CartPage/PriceAdjustments/useCouponCode.js","webpack:///./node_modules/@magento/venia-ui/lib/components/CartPage/PriceAdjustments/CouponCode/couponCode.css?1073","webpack:///./node_modules/@magento/venia-ui/lib/components/CartPage/PriceAdjustments/CouponCode/couponCode.js","webpack:///./node_modules/@magento/venia-ui/lib/components/CartPage/PriceAdjustments/CouponCode/couponCode.css"],"names":["useCouponCode","props","setIsCartUpdating","mutations","applyCouponMutation","removeCouponMutation","queries","getAppliedCouponsQuery","cartId","useCartContext","data","error","fetchError","useQuery","fetchPolicy","nextFetchPolicy","skip","variables","applyCoupon","called","applyCouponCalled","applyError","loading","applyingCoupon","useMutation","removeCoupon","removeCouponCalled","removeCouponError","removingCoupon","handleApplyCoupon","useCallback","couponCode","e","handleRemoveCoupon","useEffect","errors","useMemo","Map","errorIcon","AlertCircleIcon","width","GET_APPLIED_COUPONS","gql","AppliedCouponsFragment","APPLY_COUPON_MUTATION","CartPageFragment","REMOVE_COUPON_MUTATION","CouponCode","classes","useStyle","defaultClasses","talonProps","addToast","useToasts","formatMessage","useIntl","deriveErrorMessage","get","type","icon","message","dismissable","timeout","errorContainer","cart","applied_coupons","codes","map","code","removeButton","appliedCoupon","errorMessage","formClass","entryFormError","entryForm","id","defaultMessage","value","trim"],"mappings":"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","file":"35.00dfdd1b1ae0caedb984.js","sourcesContent":["import { useCallback, useEffect, useMemo } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { useCartContext } from '@magento/peregrine/lib/context/cart';\n\n/**\n * This talon contains the logic for a coupon code form component.\n * It performs effects and returns props data for rendering the component.\n *\n * This talon performs the following effects:\n *\n * - Fetch all coupons associated with the cart\n * - Manage the updating state of the cart while a coupon is being applied or removed\n *\n * @function\n *\n * @param {Object} props\n * @param {function} props.setIsCartUpdating Callback function for setting the update state for the cart.\n * @param {CouponCodeMutations} props.mutations GraphQL mutations for a cart's coupon code.\n * @param {CouponCodeQueries} props.queries GraphQL queries for a cart's coupon code.\n *\n * @return {CouponCodeTalonProps}\n *\n * @example <caption>Importing into your project</caption>\n * import { useCouponCode } from '@magento/peregrine/lib/talons/CartPage/PriceAdjustments/useCouponCode';\n */\nexport const useCouponCode = props => {\n    const {\n        setIsCartUpdating,\n        mutations: { applyCouponMutation, removeCouponMutation },\n        queries: { getAppliedCouponsQuery }\n    } = props;\n\n    const [{ cartId }] = useCartContext();\n    const { data, error: fetchError } = useQuery(getAppliedCouponsQuery, {\n        fetchPolicy: 'cache-and-network',\n        nextFetchPolicy: 'cache-first',\n        skip: !cartId,\n        variables: {\n            cartId\n        }\n    });\n\n    const [\n        applyCoupon,\n        {\n            called: applyCouponCalled,\n            error: applyError,\n            loading: applyingCoupon\n        }\n    ] = useMutation(applyCouponMutation);\n\n    const [\n        removeCoupon,\n        {\n            called: removeCouponCalled,\n            error: removeCouponError,\n            loading: removingCoupon\n        }\n    ] = useMutation(removeCouponMutation);\n\n    const handleApplyCoupon = useCallback(\n        async ({ couponCode }) => {\n            if (!couponCode) return;\n            try {\n                await applyCoupon({\n                    variables: {\n                        cartId,\n                        couponCode\n                    }\n                });\n            } catch (e) {\n                // Error is logged by apollo link - no need to double log.\n            }\n        },\n        [applyCoupon, cartId]\n    );\n\n    const handleRemoveCoupon = useCallback(\n        async couponCode => {\n            try {\n                await removeCoupon({\n                    variables: {\n                        cartId,\n                        couponCode\n                    }\n                });\n            } catch (e) {\n                // Error is logged by apollo link - no need to double log.\n            }\n        },\n        [cartId, removeCoupon]\n    );\n\n    useEffect(() => {\n        if (applyCouponCalled || removeCouponCalled) {\n            // If a coupon mutation is in flight, tell the cart.\n            setIsCartUpdating(applyingCoupon || removingCoupon);\n        }\n    }, [\n        applyCouponCalled,\n        applyingCoupon,\n        removeCouponCalled,\n        removingCoupon,\n        setIsCartUpdating\n    ]);\n\n    // Create a memoized error map and toggle individual errors when they change\n    const errors = useMemo(\n        () =>\n            new Map([\n                ['getAppliedCouponsQuery', fetchError],\n                ['applyCouponMutation', applyError],\n                ['removeCouponMutation', removeCouponError]\n            ]),\n        [applyError, fetchError, removeCouponError]\n    );\n\n    return {\n        applyingCoupon,\n        data,\n        errors,\n        handleApplyCoupon,\n        handleRemoveCoupon,\n        removingCoupon\n    };\n};\n\n/** JSDocs type definitions */\n\n/**\n * GraphQL mutations for a cart's coupon code.\n * This is a type used by the {@link useCouponCode} talon.\n *\n * @typedef {Object} CouponCodeMutations\n *\n * @property {GraphQLAST} applyCouponMutation Mutation for applying a coupon code to a cart.\n * @property {GraphQLAST} removeCouponMutation Mutation for removing a coupon code from a cart.\n *\n * @see [CouponCode.js]{@link https://github.com/magento/pwa-studio/blob/develop/packages/venia-ui/lib/components/CartPage/PriceAdjustments/CouponCode/couponCode.js}\n * for the queries used Venia\n */\n\n/**\n * GraphQL queries for a cart's coupon code.\n * This is a type used by the {@link useCouponCode} talon.\n *\n * @typedef {Object} CouponCodeQueries\n *\n * @property {GraphQLAST} getAppliedCouponsQuery Query to fetch the currently applied coupons for a cart.\n *\n * @see [CouponCode.js]{@link https://github.com/magento/pwa-studio/blob/develop/packages/venia-ui/lib/components/CartPage/PriceAdjustments/CouponCode/couponCode.js}\n * for the queries used Venia\n */\n\n/**\n * Object type returned by the {@link useCouponCode} talon.\n * It provides props data to use when rendering a coupon code component.\n *\n * @typedef {Object} CouponCodeTalonProps\n *\n * @property {boolean} applyingCoupon True if a coupon is currently being applied. False otherwise.\n * @property {Object} data Data returned from the `getAppliedCouponsQuery`.\n * @property {String} errorMessage If GraphQL error occurs, this value is set.\n * @property {Object} fetchError The error data object returned by a GraphQL query.\n * @property {function} handleApplyCoupon Function to call for handling the application of a coupon code to a cart.\n * @property {function} handleRemoveCoupon Function to call for handling the removal of a coupon code from a cart\n * @property {boolean} removingCoupon True if a coupon code is currently being removed. False otherwise.\n */\n","import api from \"!../../../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../css-loader/dist/cjs.js??ref--6-oneOf-0-1!./couponCode.css\";\n\nvar options = {\"injectType\":\"styleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React, { Fragment, useEffect } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { gql } from '@apollo/client';\nimport { AlertCircle as AlertCircleIcon } from 'react-feather';\nimport { useToasts } from '@magento/peregrine';\nimport { deriveErrorMessage } from '@magento/peregrine/lib/util/deriveErrorMessage';\nimport { useCouponCode } from '@magento/peregrine/lib/talons/CartPage/PriceAdjustments/useCouponCode';\n\nimport { useStyle } from '../../../../classify';\n\nimport Button from '../../../Button';\nimport { Form } from 'informed';\nimport Field from '../../../Field';\nimport Icon from '../../../Icon';\nimport LinkButton from '../../../LinkButton';\nimport TextInput from '../../../TextInput';\n\nimport { CartPageFragment } from '../../cartPageFragments.gql';\nimport { AppliedCouponsFragment } from './couponCodeFragments';\n\nimport defaultClasses from './couponCode.css';\n\nconst errorIcon = (\n    <Icon\n        src={AlertCircleIcon}\n        attrs={{\n            width: 18\n        }}\n    />\n);\n\nconst GET_APPLIED_COUPONS = gql`\n    query getAppliedCoupons($cartId: String!) {\n        cart(cart_id: $cartId) {\n            id\n            ...AppliedCouponsFragment\n        }\n    }\n    ${AppliedCouponsFragment}\n`;\n\nconst APPLY_COUPON_MUTATION = gql`\n    mutation applyCouponToCart($cartId: String!, $couponCode: String!) {\n        applyCouponToCart(\n            input: { cart_id: $cartId, coupon_code: $couponCode }\n        ) @connection(key: \"applyCouponToCart\") {\n            cart {\n                id\n                ...CartPageFragment\n                # If this mutation causes \"free\" to become available we need to know.\n                available_payment_methods {\n                    code\n                    title\n                }\n            }\n        }\n    }\n    ${CartPageFragment}\n`;\n\nconst REMOVE_COUPON_MUTATION = gql`\n    mutation removeCouponFromCart($cartId: String!) {\n        removeCouponFromCart(input: { cart_id: $cartId })\n            @connection(key: \"removeCouponFromCart\") {\n            cart {\n                id\n                ...CartPageFragment\n                # If this mutation causes \"free\" to become available we need to know.\n                available_payment_methods {\n                    code\n                    title\n                }\n            }\n        }\n    }\n    ${CartPageFragment}\n`;\n\n/**\n * A child component of the PriceAdjustments component.\n * This component renders a form for addingg a coupon code to the cart.\n *\n * @param {Object} props\n * @param {Function} props.setIsCartUpdating Function for setting the updating state for the cart.\n * @param {Object} props.classes CSS className overrides.\n * See [couponCode.css]{@link https://github.com/magento/pwa-studio/blob/develop/packages/venia-ui/lib/components/CartPage/PriceAdjustments/CouponCode/couponCode.css}\n * for a list of classes you can override.\n *\n * @returns {React.Element}\n *\n * @example <caption>Importing into your project</caption>\n * import CouponCode from \"@magento/venia-ui/lib/components/CartPage/PriceAdjustments/CouponCode\";\n */\nconst CouponCode = props => {\n    const classes = useStyle(defaultClasses, props.classes);\n\n    const talonProps = useCouponCode({\n        setIsCartUpdating: props.setIsCartUpdating,\n        mutations: {\n            applyCouponMutation: APPLY_COUPON_MUTATION,\n            removeCouponMutation: REMOVE_COUPON_MUTATION\n        },\n        queries: {\n            getAppliedCouponsQuery: GET_APPLIED_COUPONS\n        }\n    });\n    const [, { addToast }] = useToasts();\n    const {\n        applyingCoupon,\n        data,\n        errors,\n        handleApplyCoupon,\n        handleRemoveCoupon,\n        removingCoupon\n    } = talonProps;\n    const { formatMessage } = useIntl();\n\n    const removeCouponError = deriveErrorMessage([\n        errors.get('removeCouponMutation')\n    ]);\n\n    useEffect(() => {\n        if (removeCouponError) {\n            addToast({\n                type: 'error',\n                icon: errorIcon,\n                message: removeCouponError,\n                dismissable: true,\n                timeout: 10000\n            });\n        }\n    }, [addToast, removeCouponError]);\n\n    if (!data) {\n        return null;\n    }\n\n    if (errors.get('getAppliedCouponsQuery')) {\n        return (\n            <div className={classes.errorContainer}>\n                <FormattedMessage\n                    id={'couponCode.errorContainer'}\n                    defaultMessage={\n                        'Something went wrong. Please refresh and try again.'\n                    }\n                />\n            </div>\n        );\n    }\n\n    if (data.cart.applied_coupons) {\n        const codes = data.cart.applied_coupons.map(({ code }) => {\n            return (\n                <Fragment key={code}>\n                    <span>{code}</span>\n                    <LinkButton\n                        className={classes.removeButton}\n                        disabled={removingCoupon}\n                        onClick={() => {\n                            handleRemoveCoupon(code);\n                        }}\n                    >\n                        <FormattedMessage\n                            id={'couponCode.removeButton'}\n                            defaultMessage={'Remove'}\n                        />\n                    </LinkButton>\n                </Fragment>\n            );\n        });\n\n        return <div className={classes.appliedCoupon}>{codes}</div>;\n    } else {\n        const errorMessage = deriveErrorMessage([\n            errors.get('applyCouponMutation')\n        ]);\n\n        const formClass = errorMessage\n            ? classes.entryFormError\n            : classes.entryForm;\n\n        return (\n            <Form className={formClass} onSubmit={handleApplyCoupon}>\n                <Field\n                    id=\"couponCode\"\n                    label={formatMessage({\n                        id: 'cartPage.couponCode',\n                        defaultMessage: 'Coupon Code'\n                    })}\n                >\n                    <TextInput\n                        field=\"couponCode\"\n                        id={'couponCode'}\n                        placeholder={formatMessage({\n                            id: 'couponCode.enterCode',\n                            defaultMessage: 'Enter code'\n                        })}\n                        mask={value => value && value.trim()}\n                        maskOnBlur={true}\n                        message={errorMessage}\n                    />\n                </Field>\n                <Field>\n                    <Button\n                        disabled={applyingCoupon}\n                        priority={'normal'}\n                        type={'submit'}\n                    >\n                        <FormattedMessage\n                            id={'couponCode.apply'}\n                            defaultMessage={'Apply'}\n                        />\n                    </Button>\n                </Field>\n            </Form>\n        );\n    }\n};\n\nexport default CouponCode;\n","exports = module.exports = require(\"../../../../../../../css-loader/dist/runtime/api.js\")(false);\n// Imports\nexports.i(require(\"-!../../../../../../../css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../LinkButton/linkButton.css\"), \"\");\n\n// Module\nexports.push([module.id, \"/* Styles for \\\"add\\\" view. */\\n.couponCode-entryForm-1Xf,\\n.couponCode-entryFormError-1lC {\\n    display: grid;\\n    grid-template-columns: 1fr auto;\\n    grid-column-gap: 1.5rem;\\n}\\n\\n.couponCode-entryFormError-1lC input {\\n    border-color: rgb(var(--venia-global-color-red-400));\\n}\\n\\n.couponCode-entryFormError-1lC input:focus {\\n    border-color: rgb(var(--venia-global-color-gray-600));\\n}\\n\\n.couponCode-entryFormError-1lC p {\\n    color: rgb(var(--venia-global-color-error));\\n    font-weight: var(--venia-global-fontWeight-semibold);\\n}\\n\\n.couponCode-errorContainer-3fj {\\n    /* Duplicate the left/right/bottom padding on the accordion section */\\n    padding-top: 1.5rem;\\n    color: rgb(var(--venia-global-color-error));\\n    line-height: var(--venia-global-lineHeight-300);\\n}\\n\\n/* on mobile... */\\n@media (max-width: 960px) {\\n    .couponCode-entryForm-1Xf,\\n    .couponCode-entryFormError-1lC {\\n        /* switch to rows. */\\n        grid-template-columns: unset;\\n        grid-template-rows: 1fr 1fr;\\n    }\\n}\\n\\n/* Styles for \\\"removal\\\" view. */\\n.couponCode-removeButton-1ID {\\n    margin-left: 1rem;\\n}\\n\", \"\"]);\n\n// Exports\nexports.locals = {\n\t\"entryForm\": \"couponCode-entryForm-1Xf\",\n\t\"entryFormError\": \"couponCode-entryFormError-1lC\",\n\t\"errorContainer\": \"couponCode-errorContainer-3fj\",\n\t\"removeButton\": \"couponCode-removeButton-1ID \" + require(\"-!../../../../../../../css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../LinkButton/linkButton.css\").locals[\"root\"] + \"\"\n};"],"sourceRoot":""}