{"version":3,"sources":["webpack:///./src/venia/components/FilterSidebar/filterSidebar.css","webpack:///./src/magento/peregrine/talons/FilterModal/useFilterState.js","webpack:///./src/magento/peregrine/talons/FilterModal/helpers.js","webpack:///./src/magento/peregrine/talons/FilterModal/filterModal.gql.js","webpack:///./src/magento/peregrine/talons/FilterSidebar/useFilterSidebar.js","webpack:///./src/venia/components/FilterSidebar/filterSidebar.css?2ffb","webpack:///./src/venia/components/FilterSidebar/filterSidebar.js"],"names":["init","next","Map","reducer","state","action","payload","type","group","item","nextState","nextSet","Set","get","add","set","delete","size","has","wrappedReducer","withLogger","useFilterState","dispatch","useReducer","addItem","useCallback","clear","removeItem","setItems","toggleItem","api","useMemo","DELIMITER","getSearchFromState","initialValue","filterKeys","filterState","nextParams","URLSearchParams","key","items","title","value","append","toString","getStateFromSearch","filterItems","params","uniqueKeys","keys","endsWith","slice","groupItemsByValue","getAll","existingFilter","getValueFromFilterString","console","warn","getFiltersFromSearch","filters","stripHtml","html","replace","keyValueString","split","toRangeFilter","values","rangeString","Array","from","to","rangeFilter","toEqualFilter","in","map","eq","toMatchFilter","match","CONVERSION_FUNCTIONS","FilterEqualTypeInput","FilterMatchTypeInput","FilterRangeTypeInput","getFilterInput","conversionFunction","TypeError","GET_FILTER_INPUTS","gql","getFilterInputsQuery","DRAWER_NAME","useFilterSidebar","props","staticLabelGroups","operations","mergeOperations","DEFAULT_OPERATIONS","isApplying","setIsApplying","useState","drawer","toggleDrawer","closeDrawer","useAppContext","filterApi","prevDrawer","useRef","isOpen","history","useHistory","pathname","search","useLocation","data","introspectionData","useQuery","inputFields","__type","attributeCodes","attribute_code","DISABLED_FILTERS","disabled","possibleFilters","nextFilters","name","isValid","includes","isEnabled","filterNames","sortedFilters","orderBy","names","itemsByGroup","filter","options","label","count","push","display","startCase","undefined","useEffect","nextSearch","handleOpen","handleClose","handleApply","handleReset","handleKeyDownActions","event","keyCode","justOpened","current","justClosed","style","productLabel","SCROLL_OFFSET","staticLabelValue","on_sale","free_shipping","online_price","bulk_savings","new_item","disallow_pickupatstore","FilterSidebar","filterCountToOpen","talonProps","filterRef","classes","useStyle","defaultClasses","handleApplyFilter","args","filterElement","getBoundingClientRect","filterTop","top","windowScrollY","window","scrollY","scrollTo","handleStaticApplyFilter","filtersList","iteration","blockState","groupName","toggleFiltersList","find","isSelected","labelItem","camelCase","filterLabel","clearAll","root","body","header","headerTitle","blocks","labelWrapper","defaultProps","propTypes","shape","string","root_open","arrayOf","array","number"],"mappings":"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","file":"93.ffe0a99527bd8086b23d.js","sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".filterSidebar-root-5yS {\\n    --borderColor: var(--venia-global-color-border);\\n    background-color: white;\\n    bottom: 0;\\n    display: none;\\n    grid-template-rows: 1fr 7rem;\\n    max-width: 360px;\\n    width: 100%;\\n    z-index: 3;\\n}\\n\\n.filterSidebar-body-5rB {\\n    \\n}\\n\\n.filterSidebar-header-1gd {\\n    display: flex;\\n    justify-content: space-between;\\n    \\n}\\n\\n.filterSidebar-headerTitle-2aN {\\n    display: flex;\\n    align-items: center;\\n    font-size: var(--fontSize-200);;\\n    line-height: 0.875rem;\\n    text-transform: uppercase;\\n}\\n\\n.filterSidebar-action-3Y3 {\\n    padding: 1rem 0;\\n}\\n\\n.filterSidebar-action-3Y3 button {\\n\\n}\\n\\n.filterSidebar-blocks-Bhw {\\n    \\n}\\n\\n.filterSidebar-blocks-Bhw > li:last-child {\\n    \\n}\\n\\n\\n\\n.filterSidebar-labelWrapper-1FK {\\n    display: flex;\\n    flex-direction: column;\\n    margin-top: 20px;\\n}\\n.filterSidebar-labelItem-tQb {\\n    display: flex;\\n    align-items: center;\\n    margin-bottom: 15px;\\n    min-height: 30px;\\n    line-height: normal;\\n    cursor: pointer;\\n}\\n.filterSidebar-labelItem-tQb i{\\n    background-image: var(--productLabel);\\n    background-repeat: no-repeat;\\n    width: 25px;\\n    height: 25px;\\n    background-size: 90px;\\n    margin-right: 10px;\\n    \\n}\\n\\n.filterSidebar-filterLabel-BMO {\\n flex-grow: 1;\\n text-align: left;\\n font-size: var(--fontSize-100);\\n text-transform: uppercase;\\n color: rgb(var(--color-black));\\n font-weight: var(--font-weight-bold);\\n}\\n\\n.filterSidebar-onSale-2RE {\\n    background-position: -62px -32px;\\n    \\n}\\n\\n.filterSidebar-freeShipping-swH {\\n    background-position: -62px -2px;\\n   \\n}\\n.filterSidebar-onlinePrice-3Fb {\\n    background-position: -32px -32px;\\n   \\n}\\n\\n.filterSidebar-bulkSavings-3jh {\\n    background-position: -2px -32px;\\n}\\n\\n.filterSidebar-newItem-1HZ {\\n    background-position: -32px -2px;\\n}\\n.filterSidebar-disallowPickupatstore-Cou {\\n    background-position: -2px -2px;\\n}\\n\\n.filterSidebar-allowStorePickup-2_9 {\\n    background-position: -2px -2px; \\n}\\n\\n@media (min-width: 1024px) {\\n    .filterSidebar-root-5yS {\\n        display: grid;\\n    }\\n    .filterSidebar-blocks-Bhw {\\n       \\n    }\\n}\\n\", \"\"]);\n\n// Exports\nexports.locals = {\n\t\"root\": \"filterSidebar-root-5yS\",\n\t\"body\": \"filterSidebar-body-5rB\",\n\t\"header\": \"filterSidebar-header-1gd\",\n\t\"headerTitle\": \"filterSidebar-headerTitle-2aN\",\n\t\"action\": \"filterSidebar-action-3Y3\",\n\t\"blocks\": \"filterSidebar-blocks-Bhw\",\n\t\"labelWrapper\": \"filterSidebar-labelWrapper-1FK\",\n\t\"labelItem\": \"filterSidebar-labelItem-tQb\",\n\t\"filterLabel\": \"filterSidebar-filterLabel-BMO\",\n\t\"onSale\": \"filterSidebar-onSale-2RE\",\n\t\"freeShipping\": \"filterSidebar-freeShipping-swH\",\n\t\"onlinePrice\": \"filterSidebar-onlinePrice-3Fb\",\n\t\"bulkSavings\": \"filterSidebar-bulkSavings-3jh\",\n\t\"newItem\": \"filterSidebar-newItem-1HZ\",\n\t\"disallowPickupatstore\": \"filterSidebar-disallowPickupatstore-Cou\",\n\t\"allowStorePickup\": \"filterSidebar-allowStorePickup-2_9\"\n};","import { useCallback, useMemo, useReducer } from 'react';\n\nimport withLogger from '@magento/peregrine/lib/util/withLogger';\n\nconst init = next => (next instanceof Map ? next : new Map());\n\nconst reducer = (state, action) => {\n    const { payload, type } = action;\n\n    switch (type) {\n        case 'clear': {\n            return init();\n        }\n        case 'add item': {\n            const { group, item } = payload;\n            const nextState = new Map(state);\n            const nextSet = new Set(state.get(group));\n\n            nextSet.add(item);\n            nextState.set(group, nextSet);\n\n            return nextState;\n        }\n        case 'remove item': {\n            const { group, item } = payload;\n            const nextState = new Map(state);\n            const nextSet = new Set(state.get(group));\n\n            nextSet.delete(item);\n\n            // if removing an item leaves a group empty, delete that group\n            if (nextSet.size) {\n                nextState.set(group, nextSet);\n            } else {\n                nextState.delete(group);\n            }\n\n            return nextState;\n        }\n        case 'toggle item': {\n            const { group, item } = payload;\n            const nextState = new Map(state);\n            const nextSet = new Set(state.get(group));\n\n            if (nextSet.has(item)) {\n                nextSet.delete(item);\n            } else {\n                nextSet.add(item);\n            }\n\n            // if removing an item leaves a group empty, delete that group\n            if (nextSet.size) {\n                nextState.set(group, nextSet);\n            } else {\n                nextState.delete(group);\n            }\n\n            return nextState;\n        }\n        case 'set items': {\n            return init(payload);\n        }\n    }\n};\n\nconst wrappedReducer = withLogger(reducer);\n\nexport const useFilterState = () => {\n    const [state, dispatch] = useReducer(wrappedReducer, null, init);\n\n    const addItem = useCallback(\n        payload => {\n            dispatch({ payload, type: 'add item' });\n        },\n        [dispatch]\n    );\n\n    const clear = useCallback(\n        payload => {\n            dispatch({ payload, type: 'clear' });\n        },\n        [dispatch]\n    );\n\n    const removeItem = useCallback(\n        payload => {\n            dispatch({ payload, type: 'remove item' });\n        },\n        [dispatch]\n    );\n\n    const setItems = useCallback(\n        payload => {\n            dispatch({ payload, type: 'set items' });\n        },\n        [dispatch]\n    );\n\n    const toggleItem = useCallback(\n        payload => {\n            dispatch({ payload, type: 'toggle item' });\n        },\n        [dispatch]\n    );\n\n    const api = useMemo(\n        () => ({\n            addItem,\n            clear,\n            dispatch,\n            removeItem,\n            setItems,\n            toggleItem\n        }),\n        [addItem, clear, dispatch, removeItem, setItems, toggleItem]\n    );\n\n    return [state, api];\n};\n","export const DELIMITER = ',';\nexport const getSearchFromState = (initialValue, filterKeys, filterState) => {\n    // preserve all existing params\n    const nextParams = new URLSearchParams(initialValue);\n\n    // iterate over available filters\n    for (const key of filterKeys) {\n        // remove any existing filter values\n        nextParams.delete(key);\n    }\n\n    // iterate over the latest filter values\n    for (const [group, items] of filterState) {\n        for (const item of items) {\n            const { title, value } = item || {};\n\n            // append the new values\n            nextParams.append(\n                `${group}[filter]`,\n                `${title}${DELIMITER}${value}`\n            );\n        }\n    }\n\n    // prepend `?` to the final string\n    return `?${nextParams.toString()}`;\n};\n\nexport const getStateFromSearch = (initialValue, filterKeys, filterItems) => {\n    // preserve all existing params\n    const params = new URLSearchParams(initialValue);\n    const uniqueKeys = new Set(params.keys());\n    const nextState = new Map();\n\n    // iterate over existing param keys\n    for (const key of uniqueKeys) {\n        // if a key matches a known filter, add its items to the next state\n        if (filterKeys.has(key) && key.endsWith('[filter]')) {\n            // derive the group by slicing off `[filter]`\n            const group = key.slice(0, -8);\n            const items = new Set();\n            const groupItemsByValue = new Map();\n\n            // cache items by value to avoid inefficient lookups\n            for (const item of filterItems.get(group)) {\n                groupItemsByValue.set(item.value, item);\n            }\n\n            // map item values to items\n            for (const value of params.getAll(key)) {\n                const existingFilter = groupItemsByValue.get(\n                    getValueFromFilterString(value)\n                );\n\n                if (existingFilter) {\n                    items.add(existingFilter);\n                } else {\n                    console.warn(\n                        `Existing filter ${value} not found in possible filters`\n                    );\n                }\n            }\n\n            // add items to the next state, keyed by group\n            nextState.set(group, items);\n        }\n    }\n\n    return nextState;\n};\n\n/**\n * Looks for filter values within a search string and returns a map like\n * {\n *   \"category_id\": [\"Bottoms,28\", \"Pants & Shorts,19\"]\n * }\n * filter[category_id]=Bottoms,28&filter[category_id]=Pants & Shorts,19\n * @param {String} initialValue a search string, as in from location.search\n */\nexport const getFiltersFromSearch = initialValue => {\n    // preserve all existing params\n    const params = new URLSearchParams(initialValue);\n    const uniqueKeys = new Set(params.keys());\n    const filters = new Map();\n\n    // iterate over existing param keys\n    for (const key of uniqueKeys) {\n        // if a key matches a known filter, add its items to the next state\n        if (key.endsWith('[filter]')) {\n            // derive the group by slicing off `[filter]`\n            const group = key.slice(0, -8);\n            const items = new Set();\n\n            // map item values to items\n            for (const value of params.getAll(key)) {\n                items.add(value);\n            }\n\n            // add items to the next state, keyed by group\n            filters.set(group, items);\n        }\n    }\n\n    return filters;\n};\n\nexport const stripHtml = html => html.replace(/(<([^>]+)>)/gi, '');\n\n/** GetFilterInput helpers below. */\nconst getValueFromFilterString = keyValueString =>\n    keyValueString.split(DELIMITER)[1];\n\n/**\n * Converts a set of values to a range filter\n * @param {Set} values\n */\nconst toRangeFilter = values => {\n    // Range should always only be a single string. In the event we received\n    // multiple, just return the first.\n    const rangeString = getValueFromFilterString(Array.from(values)[0]);\n\n    const [from, to] = rangeString.split('_');\n    const rangeFilter = {\n        from,\n        to\n    };\n\n    if (rangeFilter.from === '*') {\n        delete rangeFilter.from;\n    }\n    if (rangeFilter.to === '*') {\n        delete rangeFilter.to;\n    }\n    return rangeFilter;\n};\n\n/**\n * Converts a set of values into an equals filter\n * @param {Set} values\n */\nconst toEqualFilter = values => {\n    if (values.size > 1) {\n        return {\n            in: Array.from(values).map(getValueFromFilterString)\n        };\n    } else {\n        return {\n            eq: getValueFromFilterString(Array.from(values)[0])\n        };\n    }\n};\n\n/**\n * Converts a set of values into a match filter\n * @param {Set} values\n */\nconst toMatchFilter = values => {\n    return { match: getValueFromFilterString(Array.from(values)[0]) };\n};\n\nconst CONVERSION_FUNCTIONS = {\n    FilterEqualTypeInput: toEqualFilter,\n    FilterMatchTypeInput: toMatchFilter,\n    FilterRangeTypeInput: toRangeFilter\n};\n\n/**\n * Returns a filter input object matching the type provided.\n *\n * @param values - A set of values to construct the result object from.\n * @param type - Any of the possible types of filter input types\n */\nexport const getFilterInput = (values, type) => {\n    const conversionFunction = CONVERSION_FUNCTIONS[type];\n    if (!conversionFunction) {\n        throw TypeError(`Unknown type ${type}`);\n    }\n\n    return conversionFunction(values);\n};\n","import { gql } from '@apollo/client';\n\nexport const GET_FILTER_INPUTS = gql`\n    query GetFilterInputsForModal {\n        __type(name: \"ProductAttributeFilterInput\") {\n            inputFields {\n                name\n                type {\n                    name\n                }\n            }\n        }\n    }\n`;\n\nexport default {\n    getFilterInputsQuery: GET_FILTER_INPUTS\n};\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { useAppContext } from '@magento/peregrine/lib/context/app';\n\nimport mergeOperations from '@magento/peregrine/lib/util/shallowMerge';\nimport { useFilterState } from '../FilterModal';\nimport {\n    getSearchFromState,\n    getStateFromSearch,\n    stripHtml\n} from '../FilterModal/helpers';\n\nimport DEFAULT_OPERATIONS from '../FilterModal/filterModal.gql';\nimport { orderBy, startCase } from 'lodash-es';\n\nconst DRAWER_NAME = 'filter';\n\nexport const useFilterSidebar = props => {\n    // use staticLabelGroups to detect static single click filters\n    const { filters, staticLabelGroups } = props;\n\n    const operations = mergeOperations(DEFAULT_OPERATIONS, props.operations);\n    const { getFilterInputsQuery } = operations;\n\n    const [isApplying, setIsApplying] = useState(false);\n    const [{ drawer }, { toggleDrawer, closeDrawer }] = useAppContext();\n    const [filterState, filterApi] = useFilterState();\n    const prevDrawer = useRef(null);\n    const isOpen = drawer === DRAWER_NAME;\n\n    const history = useHistory();\n    const { pathname, search } = useLocation();\n\n    const { data: introspectionData } = useQuery(getFilterInputsQuery);\n\n    const inputFields = introspectionData\n        ? introspectionData.__type.inputFields\n        : [];\n\n    const attributeCodes = useMemo(\n        () => filters.map(({ attribute_code }) => attribute_code),\n        [filters]\n    );\n\n    // Create a set of disabled filters.\n    const DISABLED_FILTERS = useMemo(() => {\n        const disabled = new Set();\n        // Disable category filtering when not on a search page.\n        // if (pathname !== '/search.html') {\n        //     disabled.add('category_id');\n        // }\n        return disabled;\n    }, [pathname]);\n\n    // Get \"allowed\" filters by intersection of filter attribute codes and\n    // schema input field types. This restricts the displayed filters to those\n    // that the api will understand.\n    const possibleFilters = useMemo(() => {\n        const nextFilters = new Set();\n\n        // perform mapping and filtering in the same cycle\n        for (const { name } of inputFields) {\n            const isValid = attributeCodes.includes(name);\n            const isEnabled = !DISABLED_FILTERS.has(name);\n\n            if (isValid && isEnabled) {\n                nextFilters.add(name);\n            }\n        }\n\n        return nextFilters;\n    }, [DISABLED_FILTERS, attributeCodes, inputFields]);\n\n    // iterate over filters once to set up all the collections we need\n    const [filterNames, filterKeys, filterItems] = useMemo(() => {\n        const sortedFilters = orderBy(filters, ['label'], ['asc'])\n        const names = new Map();\n        const keys = new Set();\n        const itemsByGroup = new Map();\n\n        for (const filter of sortedFilters) {\n            const { options, label: name, attribute_code: group } = filter;\n\n            // If this aggregation is not a possible filter, just back out.\n            if (possibleFilters.has(group)) {\n                const items = [];\n\n                // add filter name\n                names.set(group, name);\n\n                // add filter key permutations\n                keys.add(`${group}[filter]`);\n\n                // add items, define \"display\" for static filter\n                for (const { label, value, count } of options) {\n                    items.push({ \n                        title: stripHtml(label), \n                        value, \n                        count, \n                        display: staticLabelGroups.has(group) ? startCase(group) : undefined\n                    });\n                }\n                itemsByGroup.set(group, items);\n            }\n        }\n\n        return [names, keys, itemsByGroup];\n    }, [filters, possibleFilters]);\n\n    // on apply, write filter state to location\n    useEffect(() => {\n        if (isApplying) {\n            const nextSearch = getSearchFromState(\n                search,\n                filterKeys,\n                filterState\n            );\n\n            // write filter state to history\n            history.push({ pathname, search: nextSearch });\n\n            // mark the operation as complete\n            setIsApplying(false);\n        }\n    }, [filterKeys, filterState, history, isApplying, pathname, search]);\n\n    const handleOpen = useCallback(() => {\n        toggleDrawer(DRAWER_NAME);\n    }, [toggleDrawer]);\n\n    const handleClose = useCallback(() => {\n        closeDrawer();\n    }, [closeDrawer]);\n\n    const handleApply = useCallback(() => {\n        setIsApplying(true);\n        handleClose();\n    }, [handleClose]);\n\n    const handleReset = useCallback(() => {\n        filterApi.clear();\n        setIsApplying(true);\n    }, [filterApi, setIsApplying]);\n\n    const handleKeyDownActions = useCallback(\n        event => {\n            // do not handle keyboard actions when the modal is closed\n            if (!isOpen) {\n                return;\n            }\n\n            switch (event.keyCode) {\n                // when \"Esc\" key fired -> close the modal\n                case 27:\n                    handleClose();\n                    break;\n            }\n        },\n        [isOpen, handleClose]\n    );\n\n    useEffect(() => {\n        const justOpened =\n            prevDrawer.current === null && drawer === DRAWER_NAME;\n        const justClosed =\n            prevDrawer.current === DRAWER_NAME && drawer === null;\n\n        // on drawer toggle, read filter state from location\n        if (justOpened || justClosed) {\n            const nextState = getStateFromSearch(\n                search,\n                filterKeys,\n                filterItems\n            );\n\n            filterApi.setItems(nextState);\n        }\n\n        // on drawer close, update the modal visibility state\n        if (justClosed) {\n            handleClose();\n        }\n\n        prevDrawer.current = drawer;\n    }, [drawer, filterApi, filterItems, filterKeys, search, handleClose]);\n\n    useEffect(() => {\n        const nextState = getStateFromSearch(search, filterKeys, filterItems);\n\n        filterApi.setItems(nextState);\n    }, [filterApi, filterItems, filterKeys, search]);\n\n    return {\n        filterApi,\n        filterItems,\n        filterKeys,\n        filterNames,\n        filterState,\n        handleApply,\n        handleClose,\n        handleKeyDownActions,\n        handleOpen,\n        handleReset,\n        isApplying,\n        isOpen\n    };\n};\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-0-1!./filterSidebar.css\";\n\nvar options = {\"injectType\":\"styleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React, { useMemo, useCallback, useRef, Fragment } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { array, arrayOf, shape, string, number } from 'prop-types';\nimport { camelCase, find } from 'lodash';\nimport { useFilterSidebar } from '../../../magento/peregrine/talons/FilterSidebar';\n\nimport { useStyle } from '../../classify';\nimport LinkButton from '../LinkButton';\nimport CurrentFilters from '../FilterModal/CurrentFilters';\nimport productLabel from '../../../assets/labelSprite.png';\nimport FilterBlock from '../FilterModal/filterBlock';\nimport defaultClasses from './filterSidebar.css';\nimport CompareListBlock from '../../../components/CompareListPage/compareListBlock';\nimport WishlistBlock from '../../../components/WishList/wishlistBlock';\n\n\nconst style = {\n    '--productLabel': `url(\"${productLabel}\")`\n};\n\nconst SCROLL_OFFSET = 150;\n\n// here purpose is apply positive filter on single click\nconst staticLabelValue = {\n    on_sale: 'Yes',\n    free_shipping: 'Yes',\n    online_price: 'Yes',\n    bulk_savings: 'Yes',\n    new_item: 'Yes',\n    disallow_pickupatstore: '0'\n};\n\nconst staticLabelGroups = new Set([\n    'on_sale',\n    'free_shipping',\n    'online_price',\n    'bulk_savings',\n    'new_item',\n    'disallow_pickupatstore'\n]);\n\n/**\n * A view that displays applicable and applied filters.\n *\n * @param {Object} props.filters - filters to display\n */\nconst FilterSidebar = props => {\n    const { filters, filterCountToOpen } = props;\n    const talonProps = useFilterSidebar({ filters, staticLabelGroups });\n    const {\n        filterApi,\n        filterItems,\n        filterNames,\n        filterState,\n        handleApply,\n        handleReset\n    } = talonProps;\n\n    const filterRef = useRef();\n    const classes = useStyle(defaultClasses, props.classes);\n\n    const handleApplyFilter = useCallback(\n        (...args) => {\n            const filterElement = filterRef.current;\n            if (\n                filterElement &&\n                typeof filterElement.getBoundingClientRect === 'function'\n            ) {\n                const filterTop = filterElement.getBoundingClientRect().top;\n                const windowScrollY =\n                    window.scrollY + filterTop - SCROLL_OFFSET;\n                window.scrollTo(0, windowScrollY);\n            }\n\n            handleApply(...args);\n        },\n        [handleApply, filterRef]\n    );\n\n    const handleStaticApplyFilter = useCallback(\n        (group, item) => () => {\n            const { toggleItem } = filterApi;\n            // toggle in selected state\n            toggleItem({ group, item });\n            // apply and refetch data\n            handleApplyFilter(group, item);\n        },\n        [filterApi, handleApplyFilter]\n    );\n\n    const filtersList = useMemo(\n        () =>\n            Array.from(filterItems, ([group, items], iteration) => {\n                if (!staticLabelGroups.has(group)) {\n                    const blockState = filterState.get(group);\n                    const groupName = filterNames.get(group);\n\n                    return (\n                        <FilterBlock\n                            key={group}\n                            filterApi={filterApi}\n                            filterState={blockState}\n                            group={group}\n                            items={items}\n                            name={groupName}\n                            onApply={handleApplyFilter}\n                            initialOpen={true}\n                        />\n                    );\n                }\n            }),\n        [\n            filterApi,\n            filterItems,\n            filterNames,\n            filterState,\n            filterCountToOpen,\n            handleApplyFilter\n        ]\n    );\n\n    const toggleFiltersList = useMemo(\n        () =>\n            Array.from(filterItems, ([group, items], iteration) => {\n                if (staticLabelGroups.has(group)) {\n                    const groupName = filterNames.get(group);\n                    const item = find(items, [\n                        'title',\n                        staticLabelValue[group]\n                    ]);\n\n                    if (item) {\n                        const blockState = filterState.get(group);\n                        // to show selected filter\n                        const isSelected = blockState && blockState.has(item);\n                        return (\n                            <div\n                                className={classes.labelItem}\n                                onClick={handleStaticApplyFilter(group, item)}\n                            >\n                                <i\n                                    className={classes[camelCase(group)]}\n                                    style={style}\n                                />\n                                <span className={classes.filterLabel}>\n                                    {groupName}\n                                </span>\n                            </div>\n                        );\n                    }\n                }\n            }),\n        [\n            filterApi,\n            filterItems,\n            filterNames,\n            filterState,\n            filterCountToOpen,\n            handleApplyFilter\n        ]\n    );\n\n    const clearAll = filterState.size ? (\n        <div className={classes.action}>\n            <LinkButton type=\"button\" onClick={handleReset}>\n                <FormattedMessage\n                    id={'filterModal.action'}\n                    defaultMessage={'Clear all'}\n                />\n            </LinkButton>\n        </div>\n    ) : null;\n\n    return (\n        <Fragment>\n            <aside className={classes.root} ref={filterRef}>\n                <div className={classes.body}>\n                    <div className={classes.header}>\n                        <h2 className={classes.headerTitle}>\n                            <FormattedMessage\n                                id={'filterModal.headerTitle'}\n                                defaultMessage={'Filters'}\n                            />\n                        </h2>\n                    </div>\n                    <CurrentFilters\n                        filterApi={filterApi}\n                        filterNames={filterNames}\n                        filterState={filterState}\n                        onRemove={handleApplyFilter}\n                    />\n                    {clearAll}\n                    <ul className={classes.blocks}>{filtersList}</ul>\n                    <div className={classes.labelWrapper}>\n                        {toggleFiltersList}\n                    </div>\n                </div>\n                <div className={classes.body}>\n                    <CompareListBlock />\n                </div>\n                <div className={classes.body}>\n                    <WishlistBlock />\n                </div>\n            </aside>\n        </Fragment>\n    );\n};\n\nFilterSidebar.defaultProps = {\n    filterCountToOpen: 3\n};\n\nFilterSidebar.propTypes = {\n    classes: shape({\n        action: string,\n        blocks: string,\n        body: string,\n        header: string,\n        headerTitle: string,\n        root: string,\n        root_open: string\n    }),\n    filters: arrayOf(\n        shape({\n            attribute_code: string,\n            items: array\n        })\n    ),\n    filterCountToOpen: number\n};\n\nexport default FilterSidebar;\n"],"sourceRoot":""}