{"version":3,"sources":["webpack:///./node_modules/@magento/peregrine/lib/talons/CheckoutPage/PaymentInformation/usePaymentMethods.js","webpack:///./node_modules/@magento/venia-ui/lib/components/CheckoutPage/PaymentInformation/paymentMethods.gql.js","webpack:///./node_modules/@magento/venia-ui/lib/components/CheckoutPage/PaymentInformation/paymentMethods.css?18d3","webpack:///./node_modules/@magento/venia-ui/lib/components/CheckoutPage/PaymentInformation/paymentMethods.js","webpack:///./node_modules/@magento/venia-ui/lib/components/CheckoutPage/PaymentInformation/paymentMethods.css"],"names":["usePaymentMethods","props","queries","getPaymentMethodsQuery","cartId","useCartContext","data","loading","useQuery","skip","variables","value","currentSelectedPaymentMethod","useFieldState","availablePaymentMethods","cart","available_payment_methods","initialSelectedMethod","length","code","isLoading","GET_PAYMENT_METHODS","gql","mutations","PaymentMethods","classes","propClasses","onPaymentError","onPaymentSuccess","resetShouldSubmit","shouldSubmit","formatMessage","useIntl","useStyle","defaultClasses","talonProps","paymentMethodOperations","radios","map","title","Object","keys","payments","includes","id","isSelected","PaymentMethodComponent","renderedComponent","payment_method","label","radio_label","filter","paymentMethod","noPaymentMethodMessage","payment_errors","defaultMessage","root","radio_group","propTypes","shape","string","func","selectedPaymentMethod","bool"],"mappings":"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","file":"85.f85f8f14e8022aedeb4b.js","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { useFieldState } from 'informed';\n\nimport { useCartContext } from '../../../context/cart';\n\nexport const usePaymentMethods = props => {\n    const { queries } = props;\n    const { getPaymentMethodsQuery } = queries;\n    const [{ cartId }] = useCartContext();\n\n    const { data, loading } = useQuery(getPaymentMethodsQuery, {\n        skip: !cartId,\n        variables: { cartId }\n    });\n\n    const { value: currentSelectedPaymentMethod } = useFieldState(\n        'selectedPaymentMethod'\n    );\n\n    const availablePaymentMethods =\n        (data && data.cart.available_payment_methods) || [];\n\n    const initialSelectedMethod =\n        (availablePaymentMethods.length && availablePaymentMethods[0].code) ||\n        null;\n\n    return {\n        availablePaymentMethods,\n        currentSelectedPaymentMethod,\n        initialSelectedMethod,\n        isLoading: loading\n    };\n};\n","import { gql } from '@apollo/client';\n\nexport const GET_PAYMENT_METHODS = gql`\n    query getPaymentMethods($cartId: String!) {\n        cart(cart_id: $cartId) {\n            id\n            available_payment_methods {\n                code\n                title\n            }\n        }\n    }\n`;\n\nexport default {\n    queries: {\n        getPaymentMethodsQuery: GET_PAYMENT_METHODS\n    },\n    mutations: {}\n};\n","import api from \"!../../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../css-loader/dist/cjs.js??ref--6-oneOf-0-1!./paymentMethods.css\";\n\nvar options = {\"injectType\":\"styleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from 'react';\nimport { shape, string, bool, func } from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { usePaymentMethods } from '@magento/peregrine/lib/talons/CheckoutPage/PaymentInformation/usePaymentMethods';\n\nimport { useStyle } from '../../../classify';\nimport RadioGroup from '@magento/venia-ui/lib/components/RadioGroup';\nimport Radio from '@magento/venia-ui/lib/components/RadioGroup/radio';\nimport paymentMethodOperations from './paymentMethods.gql';\nimport defaultClasses from './paymentMethods.css';\nimport payments from './paymentMethodCollection';\n\nconst PaymentMethods = props => {\n    const {\n        classes: propClasses,\n        onPaymentError,\n        onPaymentSuccess,\n        resetShouldSubmit,\n        shouldSubmit\n    } = props;\n\n    const { formatMessage } = useIntl();\n\n    const classes = useStyle(defaultClasses, propClasses);\n\n    const talonProps = usePaymentMethods({\n        ...paymentMethodOperations\n    });\n\n    const {\n        availablePaymentMethods,\n        currentSelectedPaymentMethod,\n        initialSelectedMethod,\n        isLoading\n    } = talonProps;\n\n    if (isLoading) {\n        return null;\n    }\n\n    const radios = availablePaymentMethods\n        .map(({ code, title }) => {\n            // If we don't have an implementation for a method type, ignore it.\n            if (!Object.keys(payments).includes(code)) {\n                return;\n            }\n\n            const id = `paymentMethod--${code}`;\n            const isSelected = currentSelectedPaymentMethod === code;\n            const PaymentMethodComponent = payments[code];\n            const renderedComponent = isSelected ? (\n                <PaymentMethodComponent\n                    onPaymentSuccess={onPaymentSuccess}\n                    onPaymentError={onPaymentError}\n                    resetShouldSubmit={resetShouldSubmit}\n                    shouldSubmit={shouldSubmit}\n                />\n            ) : null;\n\n            return (\n                <div key={code} className={classes.payment_method}>\n                    <Radio\n                        id={id}\n                        label={title}\n                        value={code}\n                        classes={{\n                            label: classes.radio_label\n                        }}\n                        checked={isSelected}\n                    />\n                    {renderedComponent}\n                </div>\n            );\n        })\n        .filter(paymentMethod => !!paymentMethod);\n\n    const noPaymentMethodMessage = !radios.length ? (\n        <div className={classes.payment_errors}>\n            <span>\n                {formatMessage({\n                    id: 'checkoutPage.paymentLoadingError',\n                    defaultMessage: 'There was an error loading payments.'\n                })}\n            </span>\n            <span>\n                {formatMessage({\n                    id: 'checkoutPage.refreshOrTryAgainLater',\n                    defaultMessage: 'Please refresh or try again later.'\n                })}\n            </span>\n        </div>\n    ) : null;\n\n    return (\n        <div className={classes.root}>\n            <RadioGroup\n                classes={{ root: classes.radio_group }}\n                field=\"selectedPaymentMethod\"\n                initialValue={initialSelectedMethod}\n            >\n                {radios}\n            </RadioGroup>\n            {noPaymentMethodMessage}\n        </div>\n    );\n};\n\nexport default PaymentMethods;\n\nPaymentMethods.propTypes = {\n    classes: shape({\n        root: string,\n        payment_method: string,\n        radio_label: string\n    }),\n    onPaymentSuccess: func,\n    onPaymentError: func,\n    resetShouldSubmit: func,\n    selectedPaymentMethod: string,\n    shouldSubmit: bool\n};\n","exports = module.exports = require(\"../../../../../../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".paymentMethods-root-1kU {\\n    display: grid;\\n    padding: 2rem;\\n    padding-bottom: 1rem;\\n}\\n\\n.paymentMethods-radio_group-Odb {\\n    display: grid;\\n}\\n\\n.paymentMethods-payment_method-17c {\\n    padding-bottom: 1rem;\\n    border-bottom: 1px solid rgb(var(--venia-global-color-border));\\n}\\n\\n.paymentMethods-payment_method-17c:not(:first-child) {\\n    padding-top: 1rem;\\n}\\n\\n.paymentMethods-payment_method-17c:last-of-type {\\n    border-bottom-width: 0;\\n}\\n\\n.paymentMethods-radio_label-2Gs {\\n    font-weight: 600;\\n    justify-self: start;\\n}\\n\\n.paymentMethods-payment_errors-3yb {\\n    display: grid;\\n    gap: 0.5em;\\n    color: rgb(var(--venia-global-color-error));\\n}\\n\", \"\"]);\n\n// Exports\nexports.locals = {\n\t\"root\": \"paymentMethods-root-1kU\",\n\t\"radio_group\": \"paymentMethods-radio_group-Odb\",\n\t\"payment_method\": \"paymentMethods-payment_method-17c\",\n\t\"radio_label\": \"paymentMethods-radio_label-2Gs\",\n\t\"payment_errors\": \"paymentMethods-payment_errors-3yb\"\n};"],"sourceRoot":""}