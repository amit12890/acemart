{"version":3,"sources":["webpack:///./node_modules/@magento/peregrine/lib/hooks/useScrollIntoView.js","webpack:///./node_modules/@magento/peregrine/lib/talons/FormError/useFormError.js","webpack:///./node_modules/@magento/peregrine/lib/util/findMatchingProductVariant.js","webpack:///./node_modules/@magento/peregrine/lib/talons/CartPage/ProductListing/EditModal/useEditModal.js","webpack:///./node_modules/@magento/peregrine/lib/talons/CartPage/ProductListing/EditModal/useProductForm.js","webpack:///./node_modules/@magento/venia-ui/lib/components/CartPage/ProductListing/EditModal/productForm.css?1260","webpack:///./node_modules/@magento/venia-ui/lib/components/CartPage/ProductListing/EditModal/productFormFragment.gql.js","webpack:///./node_modules/@magento/venia-ui/lib/components/CartPage/ProductListing/EditModal/productDetail.css?c14e","webpack:///./node_modules/@magento/venia-ui/lib/components/CartPage/ProductListing/EditModal/productDetail.js","webpack:///./node_modules/@magento/venia-ui/lib/components/CartPage/ProductListing/EditModal/productForm.js","webpack:///./node_modules/@magento/venia-ui/lib/components/CartPage/ProductListing/EditModal/editModal.js","webpack:///./node_modules/@magento/venia-ui/lib/components/CartPage/ProductListing/EditModal/productDetail.css","webpack:///./node_modules/@magento/venia-ui/lib/components/CartPage/ProductListing/EditModal/productForm.css"],"names":["OPTIONS_DEFAULTS","behavior","block","useScrollIntoView","ref","shouldScroll","options","useEffect","current","HTMLElement","scrollIntoView","useFormError","props","errors","derivedErrorMessage","useMemo","deriveErrorMessage","errorMessage","findMatchingVariant","variants","optionCodes","optionSelections","find","attributes","product","customAttributes","reduce","map","code","value_index","Map","set","id","value","get","matchesStandardAttribute","matchesCustomAttribute","useEditModal","variantPrice","setVariantPrice","useState","useProductForm","cartItem","getConfigurableOptionsQuery","setIsCartUpdating","updateConfigurableOptionsMutation","updateQuantityMutation","setActiveEditItem","cartId","useCartContext","setOptionSelections","handleClose","useCallback","updateItemQuantity","called","updateQuantityCalled","error","updateQuantityError","loading","updateQuantityLoading","useMutation","updateConfigurableOptions","updateConfigurableCalled","updateConfigurableError","updateConfigurableLoading","isSaving","data","useQuery","skip","variables","sku","handleOptionSelection","optionId","selection","nextOptionSelections","initialSelection","configurable_options","option","value_id","delete","configItem","products","items","configurableOptionCodes","optionCodeMap","forEach","attribute_id","attribute_code","selectedVariant","size","has","price","regularPrice","amount","handleSubmit","formValues","cartItemId","parentSku","variantSku","quantity","isLoading","isDialogOpen","ProductFormFragment","gql","IMAGE_SIZE","ProductDetail","item","formatMessage","useIntl","prices","currency","unitPrice","name","small_image","smallImage","stock_status","stockStatusValue","url","imageURL","stockStatusLabels","defaultMessage","stockStatus","classes","useStyle","defaultClasses","root","image","imageContainer","productName","stockRow","ProductForm","talonProps","GET_CONFIGURABLE_OPTIONS","UPDATE_CONFIGURABLE_OPTIONS_MUTATION","UPDATE_QUANTITY_MUTATION","dialogButtonsDisabled","dialogSubmitButtonDisabled","dialogFormProps","initialValues","message","maybeLoadingIndicator","dataError","dialogContent","errorContainer","Array","from","values","optionRoot","quantityLabel","quantityRoot","contents","CartPageFragment","EditModal"],"mappings":"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","file":"61.ffe1dabe561f74ace2a9.js","sourcesContent":["import { useEffect } from 'react';\n\nconst OPTIONS_DEFAULTS = { behavior: 'smooth', block: 'center' };\n\n/**\n * Scrolls a ref into view on truthiness of a thing.\n *\n * @param {React.Ref} ref\n * @param {Boolean} shouldScroll allows scrolling if truthy\n * @param {OPTIONS_DEFAULTS} options https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n */\nexport const useScrollIntoView = (\n    ref,\n    shouldScroll,\n    options = OPTIONS_DEFAULTS\n) => {\n    useEffect(() => {\n        if (ref.current && ref.current instanceof HTMLElement && shouldScroll) {\n            ref.current.scrollIntoView(options);\n        }\n    }, [options, ref, shouldScroll]);\n};\n","import { useMemo } from 'react';\nimport { deriveErrorMessage } from '../../util/deriveErrorMessage';\n\nexport const useFormError = props => {\n    const { errors } = props;\n\n    const derivedErrorMessage = useMemo(() => deriveErrorMessage(errors), [\n        errors\n    ]);\n\n    return {\n        errorMessage: derivedErrorMessage\n    };\n};\n","/**\n * TODO Document\n */\nexport const findMatchingVariant = ({\n    variants,\n    optionCodes,\n    optionSelections\n}) => {\n    return variants.find(({ attributes, product }) => {\n        const customAttributes = (attributes || []).reduce(\n            (map, { code, value_index }) => new Map(map).set(code, value_index),\n            new Map()\n        );\n\n        for (const [id, value] of optionSelections) {\n            const code = optionCodes.get(id);\n            const matchesStandardAttribute = product[code] === value;\n            const matchesCustomAttribute = customAttributes.get(code) === value;\n\n            // if any option selection fails to match any standard attribute\n            // and also fails to match any custom attribute\n            // then this isn't the correct variant\n            if (!matchesStandardAttribute && !matchesCustomAttribute) {\n                return false;\n            }\n        }\n\n        // otherwise, every option selection matched\n        // and this is the correct variant\n        return true;\n    });\n};\n","import { useState } from 'react';\n\n/**\n * This talon contains logic for a product edit modal used on a cart page.\n * It returns prop data for rendering an interactive modal component.\n *\n * @function\n *\n * @return {EditModalTalonProps}\n *\n * @example <caption>Importing into your project</caption>\n * import { useEditModal } from '@magento/peregrine/lib/talons/CartPage/ProductListing/EditModal/useEditModal';\n */\nexport const useEditModal = () => {\n    const [variantPrice, setVariantPrice] = useState(null);\n\n    return {\n        setVariantPrice,\n        variantPrice\n    };\n};\n\n/** JSDocs type definitions */\n\n/**\n * Object type returned by the {@link useEditModal} talon.\n * It provides props data for rendering an edit modal component.\n *\n * @typedef {Object} EditModalTalonProps\n *\n * @property {function} setVariantPrice Function for setting a product's variant price.\n * @property {Object} variantPrice The variant price for a product. See [Money object]{@link https://devdocs.magento.com/guides/v2.4/graphql/product/product-interface.html#Money}.\n */\n","import { useCallback, useState, useEffect, useMemo } from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\n\nimport { useCartContext } from '../../../../context/cart';\nimport { findMatchingVariant } from '../../../../util/findMatchingProductVariant';\n\n/**\n * This talon contains logic for a product edit form.\n * It performs effects and returns data for rendering the component inside a modal container.\n *\n * This talon performs the following effects:\n *\n * - Manage the updating state of the cart while form data is being saved\n * - Set the variant price on a product depending on the product's options\n *\n * @function\n *\n * @param {Object} props\n * @param {Object} props.cartItem The cart item to configure on the form\n * @param {GraphQLAST} props.getConfigurableOptionsQuery GraphQL query to get the configurable options for a product.\n * @param {function} props.setIsCartUpdating Function for setting the updating state for the shopping cart.\n * @param {function} props.setVariantPrice Function for setting the variant price on a product.\n * @param {GraphQLAST} props.updateConfigurableOptionsMutation GraphQL mutation for updating the configurable options for a product.\n * @param {GraphQLAST} props.updateQuantityMutation GraphQL mutation for updating the quantity of a product in a cart.\n * @param {function} props.setActiveEditItem Function for setting the actively editing item.\n *\n * @return {ProductFormTalonProps}\n *\n * @example <caption>Importing into your project</caption>\n * import { useProductForm } from '@magento/peregrine/lib/talons/CartPage/ProductListing/EditModal/useProductForm';\n */\nexport const useProductForm = props => {\n    const {\n        cartItem,\n        getConfigurableOptionsQuery,\n        setIsCartUpdating,\n        setVariantPrice,\n        updateConfigurableOptionsMutation,\n        updateQuantityMutation,\n        setActiveEditItem\n    } = props;\n\n    const [{ cartId }] = useCartContext();\n    const [optionSelections, setOptionSelections] = useState(new Map());\n\n    const handleClose = useCallback(() => {\n        setActiveEditItem(null);\n    }, [setActiveEditItem]);\n\n    const [\n        updateItemQuantity,\n        {\n            called: updateQuantityCalled,\n            error: updateQuantityError,\n            loading: updateQuantityLoading\n        }\n    ] = useMutation(updateQuantityMutation);\n\n    const [\n        updateConfigurableOptions,\n        {\n            called: updateConfigurableCalled,\n            error: updateConfigurableError,\n            loading: updateConfigurableLoading\n        }\n    ] = useMutation(updateConfigurableOptionsMutation);\n\n    const isSaving =\n        (updateQuantityCalled && updateQuantityLoading) ||\n        (updateConfigurableCalled && updateConfigurableLoading);\n\n    useEffect(() => {\n        setIsCartUpdating(isSaving);\n    }, [isSaving, setIsCartUpdating]);\n\n    const { data, error, loading } = useQuery(getConfigurableOptionsQuery, {\n        skip: !cartItem,\n        variables: {\n            sku: cartItem ? cartItem.product.sku : null\n        }\n    });\n\n    const handleOptionSelection = useCallback(\n        (optionId, selection) => {\n            const nextOptionSelections = new Map([...optionSelections]);\n            const initialSelection = cartItem.configurable_options.find(\n                option => option.id == optionId\n            );\n\n            if (initialSelection.value_id === selection) {\n                nextOptionSelections.delete(optionId);\n            } else {\n                nextOptionSelections.set(optionId, selection);\n            }\n\n            setOptionSelections(nextOptionSelections);\n        },\n        [cartItem, optionSelections]\n    );\n\n    const configItem =\n        !loading && !error && data ? data.products.items[0] : null;\n    const configurableOptionCodes = useMemo(() => {\n        const optionCodeMap = new Map();\n\n        if (configItem) {\n            configItem.configurable_options.forEach(option => {\n                optionCodeMap.set(option.attribute_id, option.attribute_code);\n            });\n        }\n\n        return optionCodeMap;\n    }, [configItem]);\n\n    const selectedVariant = useMemo(() => {\n        if (optionSelections.size && configItem) {\n            cartItem.configurable_options.forEach(option => {\n                if (!optionSelections.has(`${option.id}`)) {\n                    optionSelections.set(`${option.id}`, option.value_id);\n                }\n            });\n            return findMatchingVariant({\n                variants: configItem.variants,\n                optionCodes: configurableOptionCodes,\n                optionSelections\n            });\n        }\n    }, [cartItem, configItem, configurableOptionCodes, optionSelections]);\n\n    useEffect(() => {\n        let variantPrice = null;\n\n        if (selectedVariant) {\n            const { product } = selectedVariant;\n            const { price } = product;\n            const { regularPrice } = price;\n            variantPrice = regularPrice.amount;\n        }\n\n        setVariantPrice(variantPrice);\n    }, [selectedVariant, setVariantPrice]);\n\n    const handleSubmit = useCallback(\n        async formValues => {\n            try {\n                if (selectedVariant) {\n                    await updateConfigurableOptions({\n                        variables: {\n                            cartId,\n                            cartItemId: cartItem.id,\n                            parentSku: cartItem.product.sku,\n                            variantSku: selectedVariant.product.sku,\n                            quantity: formValues.quantity\n                        }\n                    });\n\n                    setOptionSelections(new Map());\n                } else if (formValues.quantity !== cartItem.quantity) {\n                    await updateItemQuantity({\n                        variables: {\n                            cartId,\n                            cartItemId: cartItem.id,\n                            quantity: formValues.quantity\n                        }\n                    });\n                }\n            } catch {\n                return;\n            }\n\n            handleClose();\n        },\n        [\n            cartId,\n            cartItem,\n            handleClose,\n            selectedVariant,\n            updateConfigurableOptions,\n            updateItemQuantity\n        ]\n    );\n\n    const errors = useMemo(\n        () =>\n            new Map([\n                ['updateQuantityMutation', updateQuantityError],\n                ['updateConfigurableOptionsMutation', updateConfigurableError]\n            ]),\n        [updateConfigurableError, updateQuantityError]\n    );\n\n    return {\n        configItem,\n        errors,\n        handleOptionSelection,\n        handleSubmit,\n        isLoading: !!loading,\n        isSaving,\n        isDialogOpen: cartItem !== null,\n        handleClose\n    };\n};\n\n/** JSDocs type definitions */\n\n/**\n * Object type returned by the {@link useProductForm} talon.\n * It provides props data for a product form UI component inside a modal.\n *\n * @typedef {Object} ProductFormTalonProps\n *\n * @property {Object} configItem Cart item to configure\n * @property {Array<Error>} errors An array of form errors resulting from a configuration or quantity value\n * @property {function} handleOptionSelection A callback function handling an option selection event\n * @property {function} handleSubmit A callback function for handling form submission\n * @property {boolean} isLoading True if the form is loading data. False otherwise.\n * @property {boolean} isSaving True if the form is saving data. False otherwise.\n * @property {boolean} isDialogOpen True if the form is visible. False otherwise.\n * @property {function} handleClose A callback function for handling form closing\n */\n","import api from \"!../../../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../css-loader/dist/cjs.js??ref--6-oneOf-0-1!./productForm.css\";\n\nvar options = {\"injectType\":\"styleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { gql } from '@apollo/client';\n\nexport const ProductFormFragment = gql`\n    fragment ProductFormFragment on ProductInterface {\n        id\n        sku\n        ... on ConfigurableProduct {\n            configurable_options {\n                attribute_code\n                attribute_id\n                id\n                label\n                values {\n                    default_label\n                    label\n                    store_label\n                    use_default_value\n                    value_index\n                    swatch_data {\n                        ... on ImageSwatchData {\n                            thumbnail\n                        }\n                        value\n                    }\n                }\n            }\n            variants {\n                attributes {\n                    code\n                    value_index\n                }\n                product {\n                    id\n                    price {\n                        regularPrice {\n                            amount {\n                                currency\n                                value\n                            }\n                        }\n                    }\n                    sku\n                }\n            }\n        }\n    }\n`;\n","import api from \"!../../../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../css-loader/dist/cjs.js??ref--6-oneOf-0-1!./productDetail.css\";\n\nvar options = {\"injectType\":\"styleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Price from '@magento/venia-ui/lib/components/Price';\n\nimport { useStyle } from '../../../../classify';\nimport Image from '../../../Image';\nimport defaultClasses from './productDetail.css';\n\nconst IMAGE_SIZE = 240;\n\nconst ProductDetail = props => {\n    const { item, variantPrice } = props;\n    const { formatMessage } = useIntl();\n    const { prices, product } = item;\n    const { price } = prices;\n    const { currency, value: unitPrice } = variantPrice || price;\n    const {\n        name,\n        sku,\n        small_image: smallImage,\n        stock_status: stockStatusValue\n    } = product;\n    const { url: imageURL } = smallImage;\n    const stockStatusLabels = new Map([\n        [\n            'IN_STOCK',\n            formatMessage({\n                id: 'productDetail.inStock',\n                defaultMessage: 'In stock'\n            })\n        ],\n        [\n            'OUT_OF_STOCK',\n            formatMessage({\n                id: 'productDetail.outOfStock',\n                defaultMessage: 'Out of stock'\n            })\n        ]\n    ]);\n    const stockStatus =\n        stockStatusLabels.get(stockStatusValue) ||\n        formatMessage({\n            id: 'productDetail.unknown',\n            defaultMessage: 'Unknown'\n        });\n    const classes = useStyle(defaultClasses, props.classes);\n\n    return (\n        <div className={classes.root}>\n            <Image\n                alt={name}\n                classes={{\n                    image: classes.image,\n                    root: classes.imageContainer\n                }}\n                width={IMAGE_SIZE}\n                resource={imageURL}\n            />\n            <span className={classes.productName}>{name}</span>\n            <div className={classes.stockRow}>\n                <span>\n                    <FormattedMessage\n                        id={'productDetail.skuNumber'}\n                        defaultMessage={'SKU #'}\n                        values={{ sku }}\n                    />\n                </span>\n                <span>{stockStatus}</span>\n            </div>\n            <div className={classes.price}>\n                <Price currencyCode={currency} value={unitPrice} />\n            </div>\n        </div>\n    );\n};\n\nexport default ProductDetail;\n","import React, { Fragment } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { gql } from '@apollo/client';\nimport { useProductForm } from '@magento/peregrine/lib/talons/CartPage/ProductListing/EditModal/useProductForm';\n\nimport { useStyle } from '../../../../classify';\nimport FormError from '../../../FormError';\nimport LoadingIndicator from '../../../LoadingIndicator';\nimport Options from '../../../ProductOptions';\nimport { QuantityFields } from '../quantity';\nimport defaultClasses from './productForm.css';\nimport { CartPageFragment } from '../../cartPageFragments.gql';\nimport { ProductFormFragment } from './productFormFragment.gql';\nimport Dialog from '../../../Dialog';\nimport ProductDetail from './productDetail';\n\nconst ProductForm = props => {\n    const {\n        item: cartItem,\n        setIsCartUpdating,\n        variantPrice,\n        setVariantPrice,\n        setActiveEditItem\n    } = props;\n    const { formatMessage } = useIntl();\n    const talonProps = useProductForm({\n        cartItem,\n        getConfigurableOptionsQuery: GET_CONFIGURABLE_OPTIONS,\n        setIsCartUpdating,\n        setVariantPrice,\n        updateConfigurableOptionsMutation: UPDATE_CONFIGURABLE_OPTIONS_MUTATION,\n        updateQuantityMutation: UPDATE_QUANTITY_MUTATION,\n        setActiveEditItem\n    });\n    const {\n        configItem,\n        errors,\n        handleOptionSelection,\n        handleSubmit,\n        isLoading,\n        isSaving,\n        isDialogOpen,\n        handleClose\n    } = talonProps;\n\n    const classes = useStyle(defaultClasses, props.classes);\n    const dialogButtonsDisabled = isLoading;\n    const dialogSubmitButtonDisabled = isSaving;\n    const dialogFormProps = {\n        initialValues: cartItem\n    };\n\n    const message = isLoading\n        ? formatMessage({\n              id: 'productForm.fetchingProductOptions',\n              defaultMessage: 'Fetching Product Options...'\n          })\n            ? isSaving\n            : formatMessage({\n                  id: 'productForm.updatingCart',\n                  defaultMessage: 'Updating Cart...'\n              })\n        : null;\n\n    const maybeLoadingIndicator =\n        isLoading || isSaving ? (\n            <LoadingIndicator\n                classes={{\n                    root: classes.loading\n                }}\n            >\n                {message}\n            </LoadingIndicator>\n        ) : null;\n\n    if (cartItem && !isLoading && !configItem) {\n        return (\n            <span className={classes.dataError}>\n                <FormattedMessage\n                    id={'productForm.dataError'}\n                    defaultMessage={\n                        'Something went wrong. Please refresh and try again.'\n                    }\n                />\n            </span>\n        );\n    }\n\n    const dialogContent =\n        cartItem && configItem ? (\n            <div>\n                <FormError\n                    classes={{\n                        root: classes.errorContainer\n                    }}\n                    errors={Array.from(errors.values())}\n                    scrollOnError={false}\n                />\n                <ProductDetail item={cartItem} variantPrice={variantPrice} />\n                <Options\n                    classes={{\n                        root: classes.optionRoot\n                    }}\n                    onSelectionChange={handleOptionSelection}\n                    options={configItem.configurable_options}\n                    selectedValues={cartItem.configurable_options}\n                />\n                <h3 className={classes.quantityLabel}>\n                    <FormattedMessage\n                        id={'productForm.quantity'}\n                        defaultMessage={'Quantity'}\n                    />\n                </h3>\n                <QuantityFields\n                    classes={{\n                        root: classes.quantityRoot\n                    }}\n                    initialValue={cartItem.quantity}\n                    itemId={cartItem.id}\n                />\n            </div>\n        ) : null;\n\n    return (\n        <Fragment>\n            <Dialog\n                classes={{\n                    contents: classes.contents\n                }}\n                confirmText={'Update'}\n                confirmTranslationId={'productForm.submit'}\n                formProps={dialogFormProps}\n                isOpen={isDialogOpen}\n                onCancel={handleClose}\n                onConfirm={handleSubmit}\n                shouldDisableAllButtons={dialogButtonsDisabled}\n                shouldDisableConfirmButton={dialogSubmitButtonDisabled}\n                shouldUnmountOnHide={false}\n                title={formatMessage({\n                    id: 'editModal.headerText',\n                    defaultMessage: 'Edit Item'\n                })}\n            >\n                {maybeLoadingIndicator}\n                {dialogContent}\n            </Dialog>\n        </Fragment>\n    );\n};\n\nexport default ProductForm;\n\nexport const GET_CONFIGURABLE_OPTIONS = gql`\n    query productDetailBySku($sku: String) {\n        products(filter: { sku: { eq: $sku } }) {\n            items {\n                id\n                ...ProductFormFragment\n            }\n        }\n    }\n    ${ProductFormFragment}\n`;\n\nexport const UPDATE_QUANTITY_MUTATION = gql`\n    mutation UpdateCartItemQuantity(\n        $cartId: String!\n        $cartItemId: Int!\n        $quantity: Float!\n    ) {\n        updateCartItems(\n            input: {\n                cart_id: $cartId\n                cart_items: [{ cart_item_id: $cartItemId, quantity: $quantity }]\n            }\n        ) @connection(key: \"updateCartItems\") {\n            cart {\n                id\n                ...CartPageFragment\n            }\n        }\n    }\n    ${CartPageFragment}\n`;\n\nexport const UPDATE_CONFIGURABLE_OPTIONS_MUTATION = gql`\n    mutation UpdateConfigurableOptions(\n        $cartId: String!\n        $cartItemId: Int!\n        $parentSku: String!\n        $variantSku: String!\n        $quantity: Float!\n    ) {\n        addConfigurableProductsToCart(\n            input: {\n                cart_id: $cartId\n                cart_items: [\n                    {\n                        data: { quantity: $quantity, sku: $variantSku }\n                        parent_sku: $parentSku\n                    }\n                ]\n            }\n        ) @connection(key: \"addConfigurableProductsToCart\") {\n            cart {\n                id\n            }\n        }\n\n        removeItemFromCart(\n            input: { cart_id: $cartId, cart_item_id: $cartItemId }\n        ) @connection(key: \"removeItemFromCart\") {\n            cart {\n                id\n                ...CartPageFragment\n            }\n        }\n    }\n    ${CartPageFragment}\n`;\n","import React from 'react';\nimport { useEditModal } from '@magento/peregrine/lib/talons/CartPage/ProductListing/EditModal/useEditModal';\n\nimport ProductForm from './productForm';\n\n/**\n * A child component of the ProductListing component.\n * This component renders an edit modal for a product.\n *\n * @param {Object} props\n * @param {Object} props.item Product to edit.\n * @param {function} props.setActiveEditItem Function for setting the actively editing item\n * See [productListingFragments.js]{@link https://github.com/magento/pwa-studio/blob/develop/packages/venia-ui/lib/components/CartPage/ProductListing/productListingFragments.js}\n * for a list of properties for this object.\n * @param {Function} props.setIsCartUpdating Function for setting the updating state of the cart.\n * @param {Object} props.classes CSS className overrides.\n * See [editModal.css]{@link https://github.com/magento/pwa-studio/blob/develop/packages/venia-ui/lib/components/CartPage/ProductListing/EditModal/editModal.css}\n * for a list of classes you can override.\n *\n * @returns {React.Element}\n *\n * @example <caption>Importing into your project</caption>\n * import EditModal from \"@magento/venia-ui/lib/components/CartPage/ProductListing/EditModal\";\n */\nconst EditModal = props => {\n    const { item, setActiveEditItem, setIsCartUpdating } = props;\n    const talonProps = useEditModal();\n    const { setVariantPrice, variantPrice } = talonProps;\n\n    return (\n        <ProductForm\n            item={item}\n            setIsCartUpdating={setIsCartUpdating}\n            setVariantPrice={setVariantPrice}\n            variantPrice={variantPrice}\n            setActiveEditItem={setActiveEditItem}\n        />\n    );\n};\n\nexport default EditModal;\n","exports = module.exports = require(\"../../../../../../../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".productDetail-root-rB- {\\n    border-bottom: 1px solid rgb(var(--venia-global-color-border));\\n    display: grid;\\n    gap: 1rem;\\n    padding-bottom: 1rem;\\n}\\n\\n.productDetail-imageContainer-3nT {\\n    justify-self: center;\\n}\\n\\n.productDetail-image-2In {\\n    padding: 0 2rem;\\n}\\n\\n.productDetail-productName-1GU {\\n    font-size: 1.5rem;\\n    font-weight: 600;\\n}\\n\\n.productDetail-stockRow-1NG {\\n    display: flex;\\n    font-weight: 300;\\n    font-size: 0.875rem;\\n    justify-content: space-between;\\n}\\n\\n.productDetail-price-1PD {\\n    font-weight: 600;\\n}\\n\", \"\"]);\n\n// Exports\nexports.locals = {\n\t\"root\": \"productDetail-root-rB-\",\n\t\"imageContainer\": \"productDetail-imageContainer-3nT\",\n\t\"image\": \"productDetail-image-2In\",\n\t\"productName\": \"productDetail-productName-1GU\",\n\t\"stockRow\": \"productDetail-stockRow-1NG\",\n\t\"price\": \"productDetail-price-1PD\"\n};","exports = module.exports = require(\"../../../../../../../css-loader/dist/runtime/api.js\")(false);\n// Imports\nexports.i(require(\"-!../../../../../../../css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../Dialog/dialog.css\"), \"\");\nexports.i(require(\"-!../../../../../../../css-loader/dist/cjs.js??ref--6-oneOf-0-1!../quantity.css\"), \"\");\nexports.i(require(\"-!../../../../../../../css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../LoadingIndicator/indicator.css\"), \"\");\n\n// Module\nexports.push([module.id, \".productForm-contents-IVE {\\n    position: relative;\\n}\\n\\n.productForm-optionRoot-2ZK {\\n    border-bottom: 1px solid rgb(var(--venia-global-color-border));\\n    padding: 1rem 0;\\n}\\n\\n.productForm-quantityLabel-29I {\\n    font-size: 1rem;\\n    font-weight: 600;\\n    line-height: 1.5;\\n    margin-bottom: 1.5rem;\\n    padding-top: 1rem;\\n}\\n\\n.productForm-quantityRoot-3Mr {\\n    grid-template-columns: auto 4rem auto;\\n    justify-content: start;\\n    padding: 0 1rem;\\n}\\n\\n.productForm-loading-3Yl {\\n    height: unset;\\n    left: 0;\\n    position: absolute;\\n    text-align: center;\\n    top: 50%;\\n    transform: translateY(-50%);\\n    z-index: 10;\\n}\\n\\n.productForm-dataError-1GX {\\n    color: rgb(var(--venia-global-color-error));\\n    display: inline-block;\\n    padding-top: 1rem;\\n    line-height: var(--venia-global-lineHeight-300);\\n}\\n\\n.productForm-errorContainer-3Q6 {\\n    padding-top: 1rem;\\n}\\n\", \"\"]);\n\n// Exports\nexports.locals = {\n\t\"contents\": \"productForm-contents-IVE \" + require(\"-!../../../../../../../css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../Dialog/dialog.css\").locals[\"contents\"] + \"\",\n\t\"optionRoot\": \"productForm-optionRoot-2ZK\",\n\t\"quantityLabel\": \"productForm-quantityLabel-29I\",\n\t\"quantityRoot\": \"productForm-quantityRoot-3Mr \" + require(\"-!../../../../../../../css-loader/dist/cjs.js??ref--6-oneOf-0-1!../quantity.css\").locals[\"root\"] + \"\",\n\t\"loading\": \"productForm-loading-3Yl \" + require(\"-!../../../../../../../css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../LoadingIndicator/indicator.css\").locals[\"root\"] + \"\",\n\t\"dataError\": \"productForm-dataError-1GX\",\n\t\"errorContainer\": \"productForm-errorContainer-3Q6\"\n};"],"sourceRoot":""}