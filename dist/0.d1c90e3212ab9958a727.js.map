{"version":3,"sources":["webpack:///./node_modules/@magento/venia-ui/lib/components/Image/resourceImage.js","webpack:///./node_modules/@magento/venia-ui/lib/components/Image/image.css?05d1","webpack:///./node_modules/@magento/venia-ui/lib/components/Image/image.js","webpack:///./node_modules/@magento/venia-ui/lib/components/Image/placeholderImage.js","webpack:///./node_modules/@magento/venia-ui/lib/components/Image/simpleImage.js","webpack:///./node_modules/@magento/venia-ui/lib/components/Image/image.css"],"names":["ResourceImage","props","alt","className","handleError","handleLoad","height","resource","type","width","widths","ratio","rest","talonProps","useResourceImage","generateSrcset","generateUrl","sizes","src","srcSet","propTypes","string","isRequired","func","oneOfType","number","instanceOf","Map","defaultProps","Image","classes","propsClasses","displayPlaceholder","onError","onLoad","placeholder","useImage","handleImageLoad","hasError","isLoaded","resourceWidth","talonResourceWidth","resourceHeight","talonResourceHeight","useStyle","defaultClasses","containerClass","root","container","isLoadedClass","loaded","notLoaded","imageClass","image","actualImage","conditionallyRequiredString","propName","componentName","Error","PropTypes","checkPropTypes","shape","bool","DEFAULT_WIDTH_TO_HEIGHT_RATIO","PlaceholderImage","imageHasError","imageIsLoaded","usePlaceholderImage","shouldRenderPlaceholder","placeholderClass","placeholder_layoutOnly","placeholderFullClass","transparentPlaceholder","SimpleImage"],"mappings":"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","file":"0.d1c90e3212ab9958a727.js","sourcesContent":["import React from 'react';\nimport { func, instanceOf, number, oneOfType, string } from 'prop-types';\nimport { useResourceImage } from '@magento/peregrine/lib/talons/Image/useResourceImage';\nimport {\n    generateSrcset,\n    generateUrl\n} from '@magento/peregrine/lib/util/imageUtils';\n\n/**\n * Renders a Magento resource image.\n *\n * @param {string}   props.alt the alt attribute to apply to the image.\n * @param {string}   props.className the class to apply to this image.\n * @param {Func}     props.handleError the function to call if the image fails to load.\n * @param {Func}     props.handleLoad the function to call if the image successfully loads.\n * @param {number}   props.height the height to request for the fallback image for browsers that don't support srcset / sizes.\n * @param {string}   props.resource the Magento path to the image ex: /v/d/vd12-rn_main_2.jpg\n * @param {string}   props.type the Magento image type (\"image-category\" / \"image-product\"). Used to build the resource URL.\n * @param {number}   props.width the intrinsic width of the image & the width to request for the fallback image for browsers that don't support srcset / sizes.\n * @param {Map}      props.widths a map of breakpoints to possible widths used to create the img's sizes attribute.\n * @param {number}   props.ratio is the image width to height ratio. Defaults to 4/5.\n */\nconst ResourceImage = props => {\n    const {\n        alt,\n        className,\n        handleError,\n        handleLoad,\n        height,\n        resource,\n        type,\n        width,\n        widths,\n        ratio,\n        ...rest\n    } = props;\n\n    const talonProps = useResourceImage({\n        generateSrcset,\n        generateUrl,\n        height,\n        resource,\n        type,\n        width,\n        widths,\n        ratio\n    });\n\n    const { sizes, src, srcSet } = talonProps;\n\n    // Note: Attributes that are allowed to be overridden must appear before the spread of `rest`.\n    return (\n        <img\n            loading=\"lazy\"\n            {...rest}\n            alt={alt}\n            className={className}\n            onError={handleError}\n            onLoad={handleLoad}\n            sizes={sizes}\n            src={src}\n            srcSet={srcSet}\n            width={width}\n        />\n    );\n};\n\nResourceImage.propTypes = {\n    alt: string.isRequired,\n    className: string,\n    handleError: func,\n    handleLoad: func,\n    resource: string.isRequired,\n    height: oneOfType([number, string]),\n    type: string,\n    width: oneOfType([number, string]),\n    widths: instanceOf(Map)\n};\n\nResourceImage.defaultProps = {\n    type: 'image-product'\n};\n\nexport default ResourceImage;\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js??ref--6-oneOf-0-1!./image.css\";\n\nvar options = {\"injectType\":\"styleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from 'react';\nimport PropTypes, {\n    bool,\n    func,\n    instanceOf,\n    number,\n    oneOfType,\n    shape,\n    string\n} from 'prop-types';\nimport { useImage } from '@magento/peregrine/lib/talons/Image/useImage';\nimport { DEFAULT_WIDTH_TO_HEIGHT_RATIO } from '@magento/peregrine/lib/util/imageUtils';\n\nimport PlaceholderImage from './placeholderImage';\nimport ResourceImage from './resourceImage';\nimport SimpleImage from './simpleImage';\nimport { useStyle } from '../../classify';\n\nimport defaultClasses from './image.css';\n/**\n * The Image component renders a placeholder until the image is loaded.\n *\n * @param {object}   props.classes any classes to apply to this component\n * @param {bool}     props.displayPlaceholder whether or not to display a placeholder while the image loads or if it errors on load.\n * @param {number}   props.height the intrinsic height of the image & the height to request for the fallback image for browsers that don't support srcset / sizes.\n * @param {function} props.onError callback for error loading image\n * @param {function} props.onLoad callback for when image loads successfully\n * @param {string}   props.placeholder the placeholder source to display while the image loads or if it errors on load\n * @param {string}   props.resource the Magento path to the image ex: /v/d/vd12-rn_main_2.jpg\n * @param {string}   props.src the source of the image, ready to use in an img element\n * @param {string}   props.type the Magento image type (\"image-category\" / \"image-product\"). Used to build the resource URL.\n * @param {number}   props.width the intrinsic width of the image & the width to request for the fallback image for browsers that don't support srcset / sizes.\n * @param {number}   props.ratio is the image width to height ratio. Defaults to `DEFAULT_WIDTH_TO_HEIGHT_RATIO` from `util/images.js`.\n * @param {Map}      props.widths a map of breakpoints to possible widths used to create the img's sizes attribute.\n */\nconst Image = props => {\n    const {\n        alt,\n        classes: propsClasses,\n        displayPlaceholder,\n        height,\n        onError,\n        onLoad,\n        placeholder,\n        resource,\n        src,\n        type,\n        width,\n        widths,\n        ratio,\n        ...rest\n    } = props;\n\n    const talonProps = useImage({\n        onError,\n        onLoad,\n        width,\n        widths,\n        height,\n        ratio\n    });\n\n    const {\n        handleError,\n        handleImageLoad,\n        hasError,\n        isLoaded,\n        resourceWidth: talonResourceWidth,\n        resourceHeight: talonResourceHeight\n    } = talonProps;\n\n    const classes = useStyle(defaultClasses, propsClasses);\n    const containerClass = `${classes.root} ${classes.container}`;\n    const isLoadedClass = isLoaded ? classes.loaded : classes.notLoaded;\n    const imageClass = `${classes.image} ${isLoadedClass}`;\n\n    // If we have a src, use it directly. If not, assume this is a resource image.\n    const actualImage = src ? (\n        <SimpleImage\n            alt={alt}\n            className={imageClass}\n            handleError={handleError}\n            handleLoad={handleImageLoad}\n            height={talonResourceHeight}\n            src={src}\n            width={width}\n            {...rest}\n        />\n    ) : (\n        <ResourceImage\n            alt={alt}\n            className={imageClass}\n            handleError={handleError}\n            handleLoad={handleImageLoad}\n            height={talonResourceHeight}\n            resource={resource}\n            type={type}\n            width={talonResourceWidth}\n            widths={widths}\n            ratio={ratio}\n            {...rest}\n        />\n    );\n\n    return (\n        <div className={containerClass}>\n            <PlaceholderImage\n                alt={alt}\n                classes={classes}\n                displayPlaceholder={displayPlaceholder}\n                height={height}\n                imageHasError={hasError}\n                imageIsLoaded={isLoaded}\n                src={placeholder}\n                width={talonResourceWidth}\n                {...rest}\n            />\n            {actualImage}\n        </div>\n    );\n};\n\nconst conditionallyRequiredString = (props, propName, componentName) => {\n    // This component needs one of src or resource to be provided.\n    if (!props.src && !props.resource) {\n        return new Error(\n            `Missing both 'src' and 'resource' props in ${componentName}. ${componentName} needs at least one of these to be provided.`\n        );\n    }\n\n    return PropTypes.checkPropTypes(\n        {\n            resource: string,\n            src: string\n        },\n        props,\n        propName,\n        componentName\n    );\n};\n\nImage.propTypes = {\n    alt: string.isRequired,\n    classes: shape({\n        container: string,\n        loaded: string,\n        notLoaded: string,\n        root: string\n    }),\n    displayPlaceholder: bool,\n    height: oneOfType([number, string]),\n    onError: func,\n    onLoad: func,\n    placeholder: string,\n    resource: conditionallyRequiredString,\n    src: conditionallyRequiredString,\n    type: string,\n    width: oneOfType([number, string]),\n    widths: instanceOf(Map),\n    ratio: number\n};\n\nImage.defaultProps = {\n    displayPlaceholder: true,\n    ratio: DEFAULT_WIDTH_TO_HEIGHT_RATIO\n};\n\nexport default Image;\n","import React from 'react';\nimport { bool, number, oneOfType, shape, string } from 'prop-types';\nimport { transparentPlaceholder } from '@magento/peregrine/lib/util/images';\nimport { usePlaceholderImage } from '@magento/peregrine/lib/talons/Image/usePlaceholderImage';\n\nimport SimpleImage from './simpleImage';\n\n/**\n * A placeholder to use until the actual image is loaded.\n * This is used both for user experience and layout purposes.\n * Callers can disable the \"user experience\" part by setting displayPlaceholder to false.\n *\n * @param {string}   props.alt the alt attribute to apply to the image.\n * @param {object}   props.classes the pre-merged classes to apply to this component.\n * @param {bool}     props.displayPlaceholder whether or not to display a visual placeholder.\n * @param {number}   props.height the intrinsic height of the image.\n * @param {string}   props.imageHasError there was an error loading the actual image.\n * @param {string}   props.imageIsLoaded the actual image is loaded.\n * @param {string}   props.src the actual src of the placeholder image.\n * @param {number}   props.width the intrinsic width of the image.\n */\nconst PlaceholderImage = props => {\n    const {\n        alt,\n        classes,\n        displayPlaceholder,\n        height,\n        imageHasError,\n        imageIsLoaded,\n        src,\n        width,\n        ...rest\n    } = props;\n\n    const talonProps = usePlaceholderImage({\n        displayPlaceholder,\n        imageHasError,\n        imageIsLoaded\n    });\n\n    const { shouldRenderPlaceholder } = talonProps;\n\n    const placeholderClass = shouldRenderPlaceholder\n        ? classes.placeholder\n        : classes.placeholder_layoutOnly;\n\n    const placeholderFullClass = `${classes.image} ${placeholderClass}`;\n\n    // Note: Attributes that are allowed to be overridden must appear before the spread of `rest`.\n    return (\n        <SimpleImage\n            loading=\"eager\"\n            height={height}\n            width={width}\n            {...rest}\n            alt={alt}\n            className={placeholderFullClass}\n            src={src}\n        />\n    );\n};\n\nPlaceholderImage.propTypes = {\n    alt: string.isRequired,\n    classes: shape({\n        image: string,\n        placeholder: string,\n        placeholder_layoutOnly: string\n    }).isRequired,\n    displayPlaceholder: bool,\n    height: oneOfType([number, string]),\n    imageHasError: bool,\n    imageIsLoaded: bool,\n    src: string,\n    width: oneOfType([number, string])\n};\n\nPlaceholderImage.defaultProps = {\n    src: transparentPlaceholder\n};\n\nexport default PlaceholderImage;\n","import React from 'react';\nimport { func, number, oneOfType, string } from 'prop-types';\n\n/**\n * Renders an img element directly using the supplied src.\n *\n * @param {String}  props.alt - The alt attribute for the img element.\n * @param {String}  props.className - The class name to apply to the img element.\n * @param {Func}    props.handleError - The function to call if the image fails to load.\n * @param {Func}    props.handleLoad - The function to call if the image successfully loads.\n * @param {Number}  props.height - The height of the img element.\n * @param {String}  props.src - The src attribute for the img element.\n * @param {Number}  props.width - The width of the img element.\n */\nconst SimpleImage = props => {\n    const {\n        alt,\n        className,\n        handleError,\n        handleLoad,\n        height,\n        src,\n        width,\n        ...rest\n    } = props;\n\n    // Note: Attributes that are allowed to be overridden must appear before the spread of `rest`.\n    return (\n        <img\n            loading=\"lazy\"\n            {...rest}\n            alt={alt}\n            className={className}\n            height={height}\n            onError={handleError}\n            onLoad={handleLoad}\n            src={src}\n            width={width}\n        />\n    );\n};\n\nSimpleImage.propTypes = {\n    alt: string.isRequired,\n    className: string,\n    handleError: func,\n    handleLoad: func,\n    height: oneOfType([number, string]),\n    src: string.isRequired,\n    width: oneOfType([number, string])\n};\n\nexport default SimpleImage;\n","exports = module.exports = require(\"../../../../../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".image-root-3xt {\\n    /*\\n     * For customization, we provide an empty root.\\n     * These styles will be applied to the image container.\\n     */\\n}\\n\\n.image-container-t_c {\\n    position: relative;\\n}\\n\\n.image-image-Q9a {\\n    /*\\n     * For customization, we provide an empty image class. \\n     * These styles will be applied directly to the image itself.\\n     */\\n}\\n\\n.image-loaded-tFW {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    visibility: visible;\\n}\\n\\n.image-notLoaded-gw4 {\\n    visibility: hidden;\\n}\\n\\n.image-placeholder-58e {\\n    background-color: rgb(var(--venia-global-color-gray));\\n    position: relative;\\n    top: 0;\\n    left: 0;\\n}\\n\\n.image-placeholder_layoutOnly-1mt {\\n    background-color: unset;\\n}\\n\", \"\"]);\n\n// Exports\nexports.locals = {\n\t\"root\": \"image-root-3xt\",\n\t\"container\": \"image-container-t_c\",\n\t\"image\": \"image-image-Q9a\",\n\t\"loaded\": \"image-loaded-tFW\",\n\t\"notLoaded\": \"image-notLoaded-gw4 image-loaded-tFW\",\n\t\"placeholder\": \"image-placeholder-58e\",\n\t\"placeholder_layoutOnly\": \"image-placeholder_layoutOnly-1mt image-placeholder-58e\"\n};"],"sourceRoot":""}