{"version":3,"sources":["webpack:///./node_modules/@magento/pagebuilder/lib/ContentTypes/Buttons/buttons.css?1765","webpack:///./node_modules/@magento/pagebuilder/lib/ContentTypes/Buttons/buttons.js","webpack:///./node_modules/@magento/pagebuilder/lib/ContentTypes/Buttons/buttons.css"],"names":["Buttons","props","classes","useStyle","defaultClasses","appearance","isSameWidth","textAlign","border","borderColor","borderWidth","borderRadius","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","children","cssClasses","appearanceClassName","ref","useRef","minWidth","setMinWidth","React","useState","cssCustomProps","dynamicStyles","useLayoutEffect","current","el","min","button","querySelectorAll","offsetWidth","justifyMap","left","center","right","justifyContent","root","join","propTypes","oneOf","shape","string","stacked","inline","bool","arrayOf"],"mappings":"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","file":"78.7ef706ee05f6447c5afb.js","sourcesContent":["import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js??ref--6-oneOf-0-1!./buttons.css\";\n\nvar options = {\"injectType\":\"styleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React, { useRef, useLayoutEffect } from 'react';\nimport defaultClasses from './buttons.css';\nimport { oneOf, arrayOf, string, bool, shape } from 'prop-types';\nimport { useStyle } from '@magento/venia-ui/lib/classify';\n\n/**\n * Page Builder Buttons component.\n *\n * This component is part of the Page Builder / PWA integration. It can be consumed without Page Builder.\n *\n * @typedef Buttons\n * @kind functional component\n *\n * @param {props} props React component props\n *\n * @returns {React.Element} A React component that wraps {@link ButtonItem} components.\n */\nconst Buttons = props => {\n    const classes = useStyle(defaultClasses, props.classes);\n\n    const {\n        appearance,\n        isSameWidth,\n        textAlign,\n        border,\n        borderColor,\n        borderWidth,\n        borderRadius,\n        marginTop,\n        marginRight,\n        marginBottom,\n        marginLeft,\n        paddingTop,\n        paddingRight,\n        paddingBottom,\n        paddingLeft,\n        children,\n        cssClasses = []\n    } = props;\n\n    const appearanceClassName = classes[`${appearance}`];\n\n    const ref = useRef(null);\n    const [minWidth, setMinWidth] = React.useState(0);\n\n    const cssCustomProps = {\n        '--buttonMinWidth': minWidth ? minWidth + 'px' : null\n    };\n\n    const dynamicStyles = {\n        border,\n        borderColor,\n        borderWidth,\n        borderRadius,\n        marginTop,\n        marginRight,\n        marginBottom,\n        marginLeft,\n        paddingTop,\n        paddingRight,\n        paddingBottom,\n        paddingLeft,\n        ...cssCustomProps\n    };\n\n    useLayoutEffect(() => {\n        if (!isSameWidth) {\n            return;\n        }\n\n        const { current: el } = ref;\n        let min = 0;\n        for (const button of el.querySelectorAll('button')) {\n            const { offsetWidth } = button;\n            if (offsetWidth > min) min = offsetWidth;\n        }\n        setMinWidth(min);\n    }, [isSameWidth]);\n\n    const justifyMap = {\n        left: 'flex-start',\n        center: 'center',\n        right: 'flex-end'\n    };\n\n    dynamicStyles.justifyContent = 'flex-start';\n    if (textAlign) {\n        dynamicStyles.justifyContent = justifyMap[textAlign] || 'flex-start';\n        dynamicStyles.textAlign = textAlign;\n    }\n\n    return (\n        <div\n            ref={ref}\n            style={dynamicStyles}\n            className={[classes.root, appearanceClassName, ...cssClasses].join(\n                ' '\n            )}\n        >\n            {children}\n        </div>\n    );\n};\n\n/**\n * Props for {@link Buttons}\n *\n * @typedef props\n *\n * @property {String} appearance Sets buttons placement option\n * @property {Object} classes An object containing the class names for the Buttons\n * @property {String} classes.root CSS classes for the root container element\n * @property {String} classes.stacked CSS class represents 'stacked' buttons placement option\n * @property {String} classes.inline CSS class represents 'inline' buttons placement option\n * @property {Boolean} isSameWidth Toggles buttons to have the same width inside the Buttons container\n * @property {String} textAlign Horizontal alignment of the contents within the parent container\n * @property {String} border CSS border property\n * @property {String} borderColor CSS border color property\n * @property {String} borderWidth CSS border width property\n * @property {String} borderRadius CSS border radius property\n * @property {String} marginTop CSS margin top property\n * @property {String} marginRight CSS margin right property\n * @property {String} marginBottom CSS margin bottom property\n * @property {String} marginLeft CSS margin left property\n * @property {String} paddingTop CSS padding top property\n * @property {String} paddingRight CSS padding right property\n * @property {String} paddingBottom CSS padding bottom property\n * @property {String} paddingLeft CSS padding left property\n * @property {Array} cssClasses List of CSS classes to be applied to the component\n */\nButtons.propTypes = {\n    appearance: oneOf(['inline', 'stacked']),\n    classes: shape({\n        root: string,\n        stacked: string,\n        inline: string\n    }),\n    isSameWidth: bool,\n    textAlign: string,\n    border: string,\n    borderColor: string,\n    borderWidth: string,\n    borderRadius: string,\n    marginTop: string,\n    marginRight: string,\n    marginBottom: string,\n    marginLeft: string,\n    paddingTop: string,\n    paddingRight: string,\n    paddingBottom: string,\n    paddingLeft: string,\n    cssClasses: arrayOf(string)\n};\n\nexport default Buttons;\n","exports = module.exports = require(\"../../../../../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".buttons-root-3lJ {\\n    max-width: 100%;\\n}\\n.buttons-root-3lJ > div {\\n    display: inline-block;\\n    margin-bottom: 0.5rem;\\n    max-width: 100%;\\n}\\n.buttons-root-3lJ button[class] {\\n    max-width: 100%;\\n    overflow: hidden;\\n    min-width: var(--buttonMinWidth);\\n}\\n.buttons-stacked-1pN {\\n    display: flex;\\n    flex-wrap: wrap;\\n    flex-direction: column;\\n}\\n.buttons-inline-3IH > div {\\n    margin-inline-end: 0.5rem;\\n}\\n\", \"\"]);\n\n// Exports\nexports.locals = {\n\t\"root\": \"buttons-root-3lJ\",\n\t\"stacked\": \"buttons-stacked-1pN\",\n\t\"inline\": \"buttons-inline-3IH\"\n};"],"sourceRoot":""}