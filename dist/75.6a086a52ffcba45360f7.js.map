{"version":3,"sources":["webpack:///./node_modules/@magento/peregrine/lib/talons/CheckoutPage/PaymentInformation/summary.gql.js","webpack:///./node_modules/@magento/peregrine/lib/talons/CheckoutPage/PaymentInformation/useSummary.js","webpack:///./node_modules/@magento/venia-ui/lib/components/CheckoutPage/PaymentInformation/summary.css?f310","webpack:///./node_modules/@magento/peregrine/lib/talons/CheckoutPage/PaymentInformation/braintreeSummary.gql.js","webpack:///./node_modules/@magento/peregrine/lib/talons/CheckoutPage/PaymentInformation/useBraintreeSummary.js","webpack:///./node_modules/@magento/venia-ui/lib/components/CheckoutPage/PaymentInformation/braintreeSummary.css?e100","webpack:///./node_modules/@magento/venia-ui/lib/components/CheckoutPage/PaymentInformation/braintreeSummary.js","webpack:///./node_modules/@magento/venia-ui/lib/components/CheckoutPage/PaymentInformation/summaryPaymentCollection.js","webpack:///./node_modules/@magento/venia-ui/lib/components/CheckoutPage/PaymentInformation/summary.js","webpack:///./node_modules/@magento/venia-ui/lib/components/CheckoutPage/PaymentInformation/braintreeSummary.css","webpack:///./node_modules/@magento/venia-ui/lib/components/CheckoutPage/PaymentInformation/summary.css"],"names":["GET_SUMMARY_DATA","gql","getSummaryData","useSummary","props","operations","mergeOperations","defaultOperations","cartId","useCartContext","data","summaryData","loading","summaryDataLoading","useQuery","skip","variables","selectedPaymentMethod","cart","selected_payment_method","isLoading","queries","getBraintreeSummaryData","mutations","mapBillingAddressData","rawBillingAddressData","street","country","region","street1","street2","code","state","useBraintreeSummary","billingAddress","isBillingAddressSame","paymentNonce","BraintreeSummary","classes","propClasses","onEdit","useStyle","defaultClasses","formatMessage","useIntl","root","paymentSummary","id","defaultMessage","cardType","details","lastFour","billingAddressSummary","address_summary_container","first_name","firstName","last_name","lastName","city","postalCode","heading_container","heading","edit_button","EditIcon","icon","edit_icon","edit_text","card_details_container","payment_type","payment_details","propTypes","shape","string","func","isRequired","bool","braintree","Summary","talonProps","hasCustomSummaryComp","Object","keys","summaryPayments","includes","SummaryPaymentMethodComponent","title"],"mappings":"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","file":"75.6a086a52ffcba45360f7.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const GET_SUMMARY_DATA = gql`\n    query getSummaryData($cartId: String!) {\n        cart(cart_id: $cartId) {\n            id\n            selected_payment_method {\n                code\n                title\n            }\n        }\n    }\n`;\n\nexport default {\n    getSummaryData: GET_SUMMARY_DATA\n};\n","import { useQuery } from '@apollo/client';\n\nimport { useCartContext } from '../../../context/cart';\nimport mergeOperations from '../../../util/shallowMerge';\n\nimport defaultOperations from './summary.gql';\n/**\n * Talon to handle summary component in payment information section of\n * the checkout page.\n *\n * @param {DocumentNode} props.queries.getSummaryData gets data from the server for rendering this component\n *\n * @returns {\n *   isLoading: Boolean,\n *   selectedPaymentMethod: {\n *      code: String,\n *      title: String\n *   }\n * }\n */\nexport const useSummary = (props = {}) => {\n    const operations = mergeOperations(defaultOperations, props.operations);\n\n    const { getSummaryData } = operations;\n\n    const [{ cartId }] = useCartContext();\n\n    const { data: summaryData, loading: summaryDataLoading } = useQuery(\n        getSummaryData,\n        {\n            skip: !cartId,\n            variables: { cartId }\n        }\n    );\n\n    const selectedPaymentMethod = summaryData\n        ? summaryData.cart.selected_payment_method\n        : null;\n\n    return {\n        isLoading: summaryDataLoading,\n        selectedPaymentMethod\n    };\n};\n","import api from \"!../../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../css-loader/dist/cjs.js??ref--6-oneOf-0-1!./summary.css\";\n\nvar options = {\"injectType\":\"styleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { gql } from '@apollo/client';\n\nexport const GET_SUMMARY_DATA = gql`\n    query getSummaryData($cartId: String!) {\n        cart(cart_id: $cartId) {\n            id\n            isBillingAddressSame @client\n            paymentNonce @client\n            billingAddress: billing_address {\n                firstName: firstname\n                lastName: lastname\n                country {\n                    code\n                }\n                street\n                city\n                region {\n                    code\n                }\n                postalCode: postcode\n                phoneNumber: telephone\n            }\n        }\n    }\n`;\n\nexport default {\n    queries: {\n        getBraintreeSummaryData: GET_SUMMARY_DATA\n    },\n    mutations: {}\n};\n","import { useQuery } from '@apollo/client';\n\nimport { useCartContext } from '../../../context/cart';\n\nimport mergeOperations from '../../../util/shallowMerge';\nimport defaultOperations from './braintreeSummary.gql';\n\nconst mapBillingAddressData = rawBillingAddressData => {\n    if (rawBillingAddressData) {\n        const { street, country, region } = rawBillingAddressData;\n\n        return {\n            ...rawBillingAddressData,\n            street1: street[0],\n            street2: street[1],\n            country: country.code,\n            state: region.code\n        };\n    } else {\n        return {};\n    }\n};\n\n/**\n * Talon for the braintree summary view.\n *\n * @param {DocumentNode} props.operations operations used by this summary component\n *\n * @returns {\n *   billingAddress: {\n *      firstName: String,\n *      lastName: String,\n *      country: String,\n *      street1: String,\n *      street2: String,\n *      city: String,\n *      state: String,\n *      postalCode: String,\n *   },\n *   paymentNonce: {\n *      type: String,\n *      description: String,\n *      details: {\n *          cardType: String,\n *          lastFour: String,\n *          lastTwo: String\n *      },\n *   },\n *   isBillingAddressSame: Boolean,\n *   isLoading: Boolean,\n * }\n */\nexport const useBraintreeSummary = (props = {}) => {\n    const operations = mergeOperations(defaultOperations, props.operations);\n    const { getBraintreeSummaryData } = operations.queries;\n\n    const [{ cartId }] = useCartContext();\n    const { data: summaryData, loading: isLoading } = useQuery(\n        getBraintreeSummaryData,\n        {\n            skip: !cartId,\n            variables: { cartId }\n        }\n    );\n\n    const billingAddress = summaryData\n        ? mapBillingAddressData(summaryData.cart.billingAddress)\n        : {};\n\n    const isBillingAddressSame = summaryData\n        ? summaryData.cart.isBillingAddressSame\n        : true;\n\n    const paymentNonce = summaryData ? summaryData.cart.paymentNonce : null;\n\n    return {\n        billingAddress,\n        isBillingAddressSame,\n        isLoading,\n        paymentNonce\n    };\n};\n","import api from \"!../../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../css-loader/dist/cjs.js??ref--6-oneOf-0-1!./braintreeSummary.css\";\n\nvar options = {\"injectType\":\"styleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useStyle } from '../../../classify';\nimport { shape, string, func, bool } from 'prop-types';\nimport { Edit2 as EditIcon } from 'react-feather';\nimport Icon from '../../Icon';\nimport LinkButton from '../../LinkButton';\n\nimport { useBraintreeSummary } from '@magento/peregrine/lib/talons/CheckoutPage/PaymentInformation/useBraintreeSummary';\nimport defaultClasses from './braintreeSummary.css';\n\nconst BraintreeSummary = props => {\n    const { classes: propClasses, onEdit } = props;\n\n    const classes = useStyle(defaultClasses, propClasses);\n    const { formatMessage } = useIntl();\n\n    const {\n        billingAddress,\n        isBillingAddressSame,\n        isLoading,\n        paymentNonce\n    } = useBraintreeSummary();\n\n    if (isLoading) {\n        return (\n            <LoadingIndicator classes={{ root: classes.loading }}>\n                <FormattedMessage\n                    id={'checkoutPage.loadingPaymentInformation'}\n                    defaultMessage={'Fetching Payment Information'}\n                />\n            </LoadingIndicator>\n        );\n    }\n\n    const paymentSummary = formatMessage(\n        {\n            id: 'checkoutPage.paymentSummary',\n            defaultMessage: 'Card'\n        },\n        {\n            cardType: paymentNonce.details.cardType,\n            lastFour: paymentNonce.details.lastFour\n        }\n    );\n\n    const billingAddressSummary =\n        !isBillingAddressSame && billingAddress ? (\n            <div className={classes.address_summary_container}>\n                <div>\n                    <span className={classes.first_name}>\n                        {billingAddress.firstName}\n                    </span>\n                    <span className={classes.last_name}>\n                        {billingAddress.lastName}\n                    </span>\n                </div>\n                <div>\n                    <span className={classes.street1}>\n                        {billingAddress.street1}\n                    </span>\n                    <span className={classes.street2}>\n                        {billingAddress.street2}\n                    </span>\n                    <span className={classes.city}>{billingAddress.city}</span>\n                    <span className={classes.state}>\n                        {billingAddress.state}\n                    </span>\n                </div>\n                <div>\n                    <span className={classes.postalCode}>\n                        {billingAddress.postalCode}\n                    </span>\n                    <span className={classes.country}>\n                        {billingAddress.country}\n                    </span>\n                </div>\n            </div>\n        ) : null;\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.heading_container}>\n                <h5 className={classes.heading}>\n                    <FormattedMessage\n                        id={'checkoutPage.paymentInformation'}\n                        defaultMessage={'Payment Information'}\n                    />\n                </h5>\n                <LinkButton\n                    className={classes.edit_button}\n                    onClick={onEdit}\n                    type=\"button\"\n                >\n                    <Icon\n                        size={16}\n                        src={EditIcon}\n                        classes={{ icon: classes.edit_icon }}\n                    />\n                    <span className={classes.edit_text}>\n                        <FormattedMessage\n                            id={'global.editButton'}\n                            defaultMessage={'Edit'}\n                        />\n                    </span>\n                </LinkButton>\n            </div>\n            <div className={classes.card_details_container}>\n                <span className={classes.payment_type}>\n                    <FormattedMessage\n                        id={'global.creditCard'}\n                        defaultMessage={'Credit Card'}\n                    />\n                </span>\n                <span className={classes.payment_details}>\n                    {paymentSummary}\n                </span>\n            </div>\n            {billingAddressSummary}\n        </div>\n    );\n};\n\nexport default BraintreeSummary;\n\nBraintreeSummary.propTypes = {\n    classes: shape({\n        root: string,\n        heading_container: string,\n        heading: string,\n        edit_button: string,\n        card_details_container: string,\n        address_summary_container: string,\n        first_name: string,\n        last_name: string,\n        street1: string,\n        street2: string,\n        city: string,\n        postalCode: string,\n        country: string,\n        payment_type: string,\n        payment_details: string\n    }),\n    billingAddress: shape({\n        firstName: string,\n        lastName: string,\n        country: string,\n        street1: string,\n        street2: string,\n        city: string,\n        state: string,\n        postalCode: string\n    }),\n    onEdit: func.isRequired,\n    isBillingAddressSame: bool\n};\n","import braintree from '@magento/venia-ui/lib/components/CheckoutPage/PaymentInformation/braintreeSummary';\n/**\n * This file is augmented at build time using the @magento/venia-ui build\n * target \"summaryPagePaymentTypes\", which allows third-party modules to\n * add new payment component mappings for the checkout page.\n *\n * @see [Payment definition object]{@link PaymentDefinition}\n */\n\n\n/**\n * A payment definition object that describes a payment infor what be show on summary page.\n *\n * @typedef {Object} PaymentDefinition\n * @property {string} paymentCode is use to map your payment\n * @property {string} importPath Resolvable path to the component the\n *   Route component will render\n *\n * @example <caption>A custom payment method</caption>\n * const myCustomPayment = {\n *      paymentCode: 'cc',\n *      importPath: '@partner/module/path_to_your_component'\n * }\n */\n// generated by export-esm-collection-loader\n\nexport default {\n  braintree\n};","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { shape, string, func } from 'prop-types';\n\nimport { useSummary } from '@magento/peregrine/lib/talons/CheckoutPage/PaymentInformation/useSummary';\nimport { useStyle } from '../../../classify';\n\nimport defaultClasses from './summary.css';\nimport LoadingIndicator from '../../LoadingIndicator';\nimport summaryPayments from './summaryPaymentCollection';\n\nconst Summary = props => {\n    const { classes: propClasses, onEdit } = props;\n    const classes = useStyle(defaultClasses, propClasses);\n\n    const talonProps = useSummary();\n\n    const { isLoading, selectedPaymentMethod } = talonProps;\n\n    if (isLoading && !selectedPaymentMethod) {\n        return (\n            <LoadingIndicator classes={{ root: classes.loading }}>\n                <FormattedMessage\n                    id={'checkoutPage.loadingPaymentInformation'}\n                    defaultMessage={'Fetching Payment Information'}\n                />\n            </LoadingIndicator>\n        );\n    }\n\n    const hasCustomSummaryComp = Object.keys(summaryPayments).includes(\n        selectedPaymentMethod.code\n    );\n\n    if (hasCustomSummaryComp) {\n        const SummaryPaymentMethodComponent =\n            summaryPayments[selectedPaymentMethod.code];\n        return <SummaryPaymentMethodComponent onEdit={onEdit} />;\n    } else {\n        return (\n            <div className={classes.root}>\n                <div className={classes.heading_container}>\n                    <h5 className={classes.heading}>\n                        <FormattedMessage\n                            id={'checkoutPage.paymentInformation'}\n                            defaultMessage={'Payment Information'}\n                        />\n                    </h5>\n                </div>\n                <div className={classes.card_details_container}>\n                    <span className={classes.payment_details}>\n                        {selectedPaymentMethod.title}\n                    </span>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default Summary;\n\nSummary.propTypes = {\n    classes: shape({\n        root: string,\n        heading_container: string,\n        heading: string,\n        card_details_container: string,\n        payment_details: string\n    }),\n    onEdit: func.isRequired\n};\n","exports = module.exports = require(\"../../../../../../css-loader/dist/runtime/api.js\")(false);\n// Imports\nexports.i(require(\"-!../../../../../../css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../LoadingIndicator/indicator.css\"), \"\");\n\n// Module\nexports.push([module.id, \".braintreeSummary-root-2IB {\\n    display: grid;\\n    gap: 1.125rem;\\n    padding: 2rem;\\n}\\n\\n.braintreeSummary-loading-3k5 {\\n    text-align: center;\\n}\\n\\n.braintreeSummary-heading_container-14d {\\n    display: grid;\\n    grid-auto-flow: column;\\n    grid-template-columns: 1fr;\\n}\\n\\n.braintreeSummary-edit_button-e-W {\\n    color: rgb(var(--venia-brand-color-1-700));\\n    padding: 1rem;\\n    margin: -1rem;\\n}\\n\\n.braintreeSummary-heading-1Cy {\\n    font-weight: 600;\\n}\\n\\n.braintreeSummary-address_summary_container-1ev {\\n    display: grid;\\n    row-gap: 0.5rem;\\n}\\n\\n.braintreeSummary-first_name-uk8 {\\n    padding-right: 5px;\\n}\\n\\n.braintreeSummary-last_name-2iF {\\n    padding-right: 5px;\\n}\\n\\n.braintreeSummary-street1-3vY {\\n    padding-right: 5px;\\n}\\n\\n.braintreeSummary-street2-3WA {\\n    padding-right: 5px;\\n}\\n\\n.braintreeSummary-city-3oL {\\n    padding-right: 5px;\\n}\\n\\n.braintreeSummary-state-JzL {\\n    padding-right: 5px;\\n}\\n\\n.braintreeSummary-postalCode-2GF {\\n    padding-right: 5px;\\n}\\n\\n.braintreeSummary-country-1fZ {\\n    padding-right: 5px;\\n}\\n\\n.braintreeSummary-edit_icon-2hS {\\n    stroke: rgb(var(--venia-brand-color-1-700));\\n}\\n\\n.braintreeSummary-card_details_container-3I- {\\n    display: grid;\\n    gap: 0.5rem;\\n}\\n\\n.braintreeSummary-payment_type-3ZM {\\n}\\n\\n.braintreeSummary-payment_details-2up {\\n}\\n\\n@media (max-width: 960px) {\\n    .braintreeSummary-edit_text-2eS {\\n        display: none;\\n    }\\n}\\n\", \"\"]);\n\n// Exports\nexports.locals = {\n\t\"root\": \"braintreeSummary-root-2IB\",\n\t\"loading\": \"braintreeSummary-loading-3k5 \" + require(\"-!../../../../../../css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../LoadingIndicator/indicator.css\").locals[\"root\"] + \"\",\n\t\"heading_container\": \"braintreeSummary-heading_container-14d\",\n\t\"edit_button\": \"braintreeSummary-edit_button-e-W\",\n\t\"heading\": \"braintreeSummary-heading-1Cy\",\n\t\"address_summary_container\": \"braintreeSummary-address_summary_container-1ev\",\n\t\"first_name\": \"braintreeSummary-first_name-uk8\",\n\t\"last_name\": \"braintreeSummary-last_name-2iF\",\n\t\"street1\": \"braintreeSummary-street1-3vY\",\n\t\"street2\": \"braintreeSummary-street2-3WA\",\n\t\"city\": \"braintreeSummary-city-3oL\",\n\t\"state\": \"braintreeSummary-state-JzL\",\n\t\"postalCode\": \"braintreeSummary-postalCode-2GF\",\n\t\"country\": \"braintreeSummary-country-1fZ\",\n\t\"edit_icon\": \"braintreeSummary-edit_icon-2hS\",\n\t\"card_details_container\": \"braintreeSummary-card_details_container-3I-\",\n\t\"payment_type\": \"braintreeSummary-payment_type-3ZM\",\n\t\"payment_details\": \"braintreeSummary-payment_details-2up\",\n\t\"edit_text\": \"braintreeSummary-edit_text-2eS\"\n};","exports = module.exports = require(\"../../../../../../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".summary-root-2Ze {\\n    display: grid;\\n    gap: 1.125rem;\\n    padding: 2rem;\\n}\\n\\n.summary-heading_container-2F2 {\\n    display: grid;\\n    grid-auto-flow: column;\\n    grid-template-columns: 1fr;\\n}\\n\\n.summary-heading-29o {\\n    font-weight: 600;\\n}\\n\\n.summary-card_details_container-1pN {\\n    display: grid;\\n    gap: 0.5rem;\\n}\\n\\n.summary-payment_details-3Ro {\\n}\\n\", \"\"]);\n\n// Exports\nexports.locals = {\n\t\"root\": \"summary-root-2Ze\",\n\t\"heading_container\": \"summary-heading_container-2F2\",\n\t\"heading\": \"summary-heading-29o\",\n\t\"card_details_container\": \"summary-card_details_container-1pN\",\n\t\"payment_details\": \"summary-payment_details-3Ro\"\n};"],"sourceRoot":""}